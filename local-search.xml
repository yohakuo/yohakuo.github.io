<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>2024-W12</title>
    <link href="/2024/03/25/2024-W12/"/>
    <url>/2024/03/25/2024-W12/</url>
    
    <content type="html"><![CDATA[<p>本篇是对 <code>2024-03-18 </code> 到 <code> 2024-03-24</code> 这一周生活的记录与思考。</p><h3 id="博客实践"><a href="#博客实践" class="headerlink" title="博客实践"></a>博客实践</h3><p>搭建了一个静态博客，现在还存在一些问题</p><ul><li>如何用 ob 轻松提交？</li><li>本地预览时不时会失效，不知道是什么原因</li></ul><p>于是尝试另外一个方案</p><ul><li><a href="https://mxts.jiujiuer.xyz/2022/11/25/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/GitHub%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/">根据这个</a>尝试自动化搭建，又有新问题</li><li>工作流运行正常但是页面生成为空，是否和网页配置有关？或者说主题的问题？</li><li><del>找不到办法，问老师，老师把这个抛给研究生了（突然负罪感++）</del>，告诉老师解决了</li></ul><p>确实是主题的原因，最后找到了在 GitHub action 里面写子模块的办法，成功！</p><p>虽然前前后后花了四天左右的事件折腾，但我收获了淡淡的、长久的喜悦。</p><p>同时也无意中验证了费曼的某个技巧在我身上是可行的。</p><blockquote><p>[!cite]<br>只要开始了研究某个谜题，就绝对不可以停下来，必须解开谜题才能停止。</p><p>…必须坚持到底，绝不半途而废，一定找到问题所在，否则绝不罢休！</p></blockquote><h3 id="新收藏的播客"><a href="#新收藏的播客" class="headerlink" title="新收藏的播客"></a>新收藏的播客</h3><ul><li><p>岩中花述<br>  喜欢这个名字，很有力量和意义。</p><p>  文艺访谈的感觉，我听到的是鲁豫老师对话阿詹，还有一期阿庞的。</p><p>  阿詹那期有提到自己偶像的一个转变，从一个虚构的大女主律师到女大法官鲁斯·金斯伯格。</p><p>  我以前也以为我不会有偶像，直到发现有这么多女大姥，好喜欢看她们的故事。</p></li><li><p>乌鸦不在场<br>  李雯姐推荐的一档讲述真实罪案的节目，第一次接触这个类型，挺有趣的。</p></li><li><p>纵横四海<br>  很长的知识输出播客，最长的有四个小时（我听的），断断续续的听了两三期（走路的时候主播的声音也很适配），</p><p>  个人感觉信噪比比较低，不太习惯分段听。</p></li></ul><h3 id="阅读-思考"><a href="#阅读-思考" class="headerlink" title="阅读&amp;思考"></a>阅读&amp;思考</h3><blockquote><p>读书既可以有功利性也可以没有。</p><p>如果你目的导向明确，就像拿到一个的房子的图纸了，要做的事情就是建房子，那么就可以开始《刻意练习》的操作；</p><p>如果你目标不明确，那更多是以兴趣为导向，就像在一片空地播种, 直到它生长成属于自己的独一无二的知识体系森林。</p></blockquote><p>-<br>    大一大二的时候，我很长一段时间都在迷茫，</p><pre><code class="hljs">迫切地想要找到目标或者兴趣所在，想要选择一个方向可以 all in 深入学习，锻炼技能。然而，什么也没干。现在想来，我那个时候虽然有目的，但完全不具体，也很混乱。我完全可以把目标改成发现日常里感兴趣的东西然后去学习，比如 ob 的学习，那么自然而然，兴趣方向就多起来了。现在有很多兴趣在以前就有迹象，只是我一直没有注意和去实践它们。</code></pre><blockquote><p>所有的代码都是技术债。</p><p>代码需要不断维护，如果技术债拖着不换，维护成本就会像滚雪球一样越滚越多，直到被放弃。</p><p>代码越少，技术债越小。</p><p>对软件开发的正确做法：1. 冗余的代码都要删除；2。只实现必须实现的功能，除非绝对必要，不引进新功能。</p></blockquote><p>-<br>    很多软件不愿意增加新功能或许是因为维护成本大于收益吧。</p><pre><code class="hljs">关于工具的使用，最近有些困惑。我很容易为了折腾工具而忘记本来的目的。比如学习 ob，大概折腾到我觉得看得过去的时候，我就能专注使用，并且心情愉悦效率高。搭建博客我也考虑到维护和后面部署提交的麻烦，所以在前面折腾，短时间内 all in ，试图解决问题。如果结果顺利的话，那就皆大欢喜，我开开心心地使用。如果进展不顺利，该怎么办呢？我想过~~暂时放下看看？~~事实上我放不下，最后 work out，开心！</code></pre><blockquote><p>同一组人结合仍然是克服孤独感最常用的方法。</p><p>在这种结合中，参加者为了使自己属于这一组人而失去了大部分个性。</p><p>如果我与他人完全一样，我的感情、思想与他人一致，我的衣着、习惯和看法都与这一组人的楷模看齐，</p><p>我就可得救，就不会再经历可怕的孤独。 </p></blockquote><p>-<br>    人为什么不愿意和群体不一样的另一个角度，除了害怕承受异议带来的后果，也无法拒绝长期获得认同共识来缓解孤独的甜头。</p><pre><code class="hljs">说到这又想到总有人跟我抱怨另一个人做了某些ta 不想干的事情，但是迫于从众的压力，ta 只好选择和另一个人保持一致。我每次都在试图鼓励ta 们去做自己的选择，不过也没多大作用，对自己来说改变就挺难的更何况他人。我可以确定的是，我不会压抑心中的怒火，而是要为每一次的愤怒找到归处。无论它来自谁或者什么事情，都是在推动我直面问题。这便是在日常生活中实践女权主义，我本位地活。</code></pre><blockquote><p>[!cite]<br>上野: …在日常生活中实践女权主义并非一个宏大的政治议题。</p><p>你能做的便是，反击那些令你不舒服的事，还有做你想做的任何事。不要向你所遇到的不公妥协。</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>个人记录</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Latex的安装和基本使用</title>
    <link href="/2024/03/25/Latex%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
    <url>/2024/03/25/Latex%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<ul><li>来源  <ul><li><a href="https://dylandong.top/posts/e480/">LaTeX：从入门到日常使用</a></li></ul></li></ul><h2 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h2><p>LaTeX是一种“非所见即所得”的排版系统，用户需要输入特定的代码，保存在后缀为.tex的文件中，通过编译得到所需的pdf文件，例如以下代码：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">\documentclass</span><span class="hljs-template-variable">&#123;article&#125;</span><span class="language-xml">  </span><br><span class="language-xml">  </span><br><span class="language-xml">\begin</span><span class="hljs-template-variable">&#123;document&#125;</span><span class="language-xml">  </span><br><span class="language-xml">  </span><br><span class="language-xml">Hello, world!  </span><br><span class="language-xml">  </span><br><span class="language-xml">\end</span><span class="hljs-template-variable">&#123;document&#125;</span><br></code></pre></td></tr></table></figure><p>最后输出的结果是一个 pdf 文件，内容是“Hello, world!”。</p><p>所见即所得可以参考 word，但 latex 的优势在于可以保证<strong>规范性</strong>，这使得 LaTeX 非常适合用于论文的排版。</p><h2 id="文档类型"><a href="#文档类型" class="headerlink" title="文档类型"></a>文档类型</h2><p> - 对于英文，可以用<code>book</code>、<code>article</code>和<code>beamer</code>；<br> -  对于中文，可以用 <code>ctexbook</code>、<code>ctexart</code> 和 <code>ctexbeamer</code>，这些类型自带了对中文的支持。</p><h3 id="文首环境"><a href="#文首环境" class="headerlink" title="文首环境"></a>文首环境</h3><p>不同的文件类型，编写的过程中也会有一定的差异，如果直接修改文件类型的话，甚至会报错。以下统一选用 <code>ctexart</code>。在编辑框第一行，输入如下内容来设置文件类型：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">\documentclass</span><span class="hljs-template-variable">&#123;ctexart&#125;</span><br></code></pre></td></tr></table></figure><p>一般也可以在<code>\documentclass</code>处设置基本参数，笔者通常设置默认字体大小为12pt，纸张大小为A4，单面打印。需要将第一行的内容替换为：</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs accesslog">\documentclass<span class="hljs-string">[12pt, a4paper, oneside]</span>&#123;ctexart&#125;<br></code></pre></td></tr></table></figure><p>文件的正文部分需要放入 document 环境中，在 document 环境外的部分不会出现在文件中。</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">\documentclass[12pt, a4paper, oneside]</span><span class="hljs-template-variable">&#123;ctexart&#125;</span><span class="language-xml">  </span><br><span class="language-xml">  </span><br><span class="language-xml">\begin</span><span class="hljs-template-variable">&#123;document&#125;</span><span class="language-xml">  </span><br><span class="language-xml">  </span><br><span class="language-xml">这里是正文.   </span><br><span class="language-xml">  </span><br><span class="language-xml">\end</span><span class="hljs-template-variable">&#123;document&#125;</span><br></code></pre></td></tr></table></figure><h2 id="宏包"><a href="#宏包" class="headerlink" title="宏包"></a>宏包</h2><ul><li><p>用途<br>  为了完成一些功能（如定理环境），还需要在导言区，也即document环境之前加载宏包。加载宏包的代码是<code>\usepackage&#123;&#125;</code>。本份教程中，与数学公式与定理环境相关的宏包为<code>amsmath</code>、<code>amsthm</code>、<code>amssymb</code>，用于插入图片的宏包为<code>graphicx</code>，</p></li><li><p>代码</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">\usepackage</span><span class="hljs-template-variable">&#123;amsmath, amsthm, amssymb, graphicx&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><br></code></pre></td></tr></table></figure></li><li><p>另外，在加载宏包时还可以设置基本参数，如使用超链接宏包<code>hyperref</code>，可以设置引用的颜色为黑色等</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">\usepackage[<span class="hljs-attribute">bookmarks</span>=<span class="hljs-literal">true</span>, colorlinks, <span class="hljs-attribute">citecolor</span>=blue, <span class="hljs-attribute">linkcolor</span>=black]&#123;hyperref&#125;<br></code></pre></td></tr></table></figure></li></ul><h2 id="基本运用"><a href="#基本运用" class="headerlink" title="基本运用"></a>基本运用</h2><h4 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h4><p>标题可以用 <code>\title&#123;&#125;</code> 设置，作者可以用 <code>\author</code> 设置，日期可以用 <code>\date&#123;&#125;</code> 设置，这些都需要放在导言区。为了在文档中显示标题信息，需要使用 <code>\maketitle</code>。例如：</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><span class="hljs-string">\documentclass[12pt,</span> a4paper, oneside]&#123;ctexart&#125;  <br><span class="hljs-string">\usepackage&#123;amsmath,</span> amsthm, amssymb, graphicx&#125;  <br><span class="hljs-string">\usepackage[bookmarks=true,</span> colorlinks, citecolor=blue, linkcolor=black]&#123;hyperref&#125;  <br>  <br>% 导言区  <br>  <br><span class="hljs-string">\title&#123;我的第一个\LaTeX</span> 文档&#125;  <br><span class="hljs-string">\author&#123;统计91董晟渤&#125;</span>  <br><span class="hljs-string">\date&#123;\today&#125;</span>  <br>  <br><span class="hljs-string">\begin&#123;document&#125;</span>  <br>  <br><span class="hljs-string">\maketitle</span>  <br>  <br>这里是正文.   <br>  <br><span class="hljs-string">\end&#123;document&#125;</span><br></code></pre></td></tr></table></figure><h4 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h4><p>正文可以直接在 document 环境中书写，没有必要加入空格来缩进，因为文档默认会进行首行缩进。相邻的两行在编译时仍然会视为同一段。在 LaTeX 中，另起一段的方式是使用一行相隔，例如：</p><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs erlang">我是第一段.   <br>  <br>我是第二段.<br></code></pre></td></tr></table></figure><p>这样编译出来就是两个段落。在正文部分，多余的空格、回车等等都会被自动忽略，这保证了全文排版不会突然多出一行或者多出一个空格。另外，另起一页的方式是：</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">\<span class="hljs-keyword">new</span><span class="hljs-type">page</span><br></code></pre></td></tr></table></figure><p>，为了保证美观，通常将中文标点符号替换为英文标点符号（需要注意的是英文标点符号后面还有一个空格），这比较适合数学类型的文档。</p><p>在正文中，还可以设置局部的特殊字体：</p><table><thead><tr><th>字体</th><th>命令</th></tr></thead><tbody><tr><td>直立</td><td>\textup{}</td></tr><tr><td>意大利</td><td>\textit{}</td></tr><tr><td>倾斜</td><td>\textsl{}</td></tr><tr><td>小型大写</td><td>\textsc{}</td></tr><tr><td>加宽加粗</td><td>\textbf{}</td></tr></tbody></table><h4 id="章节"><a href="#章节" class="headerlink" title="章节"></a>章节</h4><p>对于<code>ctexart</code>文件类型，章节可以用<code>\section&#123;&#125;</code>和<code>\subsection&#123;&#125;</code>命令来标记，例如：</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><span class="hljs-string">\documentclass[12pt,</span> a4paper, oneside]&#123;ctexart&#125;  <br><span class="hljs-string">\usepackage&#123;amsmath,</span> amsthm, amssymb, graphicx&#125;  <br><span class="hljs-string">\usepackage[bookmarks=true,</span> colorlinks, citecolor=blue, linkcolor=black]&#123;hyperref&#125;  <br>  <br>% 导言区  <br>  <br><span class="hljs-string">\title&#123;我的第一个\LaTeX</span> 文档&#125;  <br><span class="hljs-string">\author&#123;统计91董晟渤&#125;</span>  <br><span class="hljs-string">\date&#123;\today&#125;</span>  <br>  <br><span class="hljs-string">\begin&#123;document&#125;</span>  <br>  <br><span class="hljs-string">\maketitle</span>  <br>  <br><span class="hljs-string">\section&#123;一级标题&#125;</span>  <br>  <br><span class="hljs-string">\subsection&#123;二级标题&#125;</span>  <br>  <br>这里是正文.   <br>  <br><span class="hljs-string">\subsection&#123;二级标题&#125;</span>  <br>  <br>这里是正文.   <br>  <br><span class="hljs-string">\end&#123;document&#125;</span><br></code></pre></td></tr></table></figure><h4 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h4><p>在有了章节的结构之后，使用 <code>\tableofcontents</code> 命令就可以在指定位置生成目录。通常带有目录的文件需要编译两次，因为需要先在目录中生成.toc 文件，再据此生成目录。</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><span class="hljs-string">\documentclass[12pt,</span> a4paper, oneside]&#123;ctexart&#125;  <br><span class="hljs-string">\usepackage&#123;amsmath,</span> amsthm, amssymb, graphicx&#125;  <br><span class="hljs-string">\usepackage[bookmarks=true,</span> colorlinks, citecolor=blue, linkcolor=black]&#123;hyperref&#125;  <br>  <br>% 导言区  <br>  <br><span class="hljs-string">\title&#123;我的第一个\LaTeX</span> 文档&#125;  <br><span class="hljs-string">\author&#123;统计91董晟渤&#125;</span>  <br><span class="hljs-string">\date&#123;\today&#125;</span>  <br>  <br><span class="hljs-string">\begin&#123;document&#125;</span>  <br>  <br><span class="hljs-string">\maketitle</span>  <br>  <br><span class="hljs-string">\tableofcontents</span>  <br>  <br><span class="hljs-string">\section&#123;一级标题&#125;</span>  <br>  <br><span class="hljs-string">\subsection&#123;二级标题&#125;</span>  <br>  <br>这里是正文.   <br>  <br><span class="hljs-string">\subsection&#123;二级标题&#125;</span>  <br>  <br>这里是正文.   <br>  <br><span class="hljs-string">\end&#123;document&#125;</span><br></code></pre></td></tr></table></figure><h4 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h4><p>插入图片需要使用<code>graphicx</code>宏包，建议使用如下方式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css">\begin&#123;<span class="hljs-selector-tag">figure</span>&#125;<span class="hljs-selector-attr">[htbp]</span>  <br>\centering  <br>\includegraphics<span class="hljs-selector-attr">[width=8cm]</span>&#123;图片<span class="hljs-selector-class">.jpg</span>&#125;  <br>\<span class="hljs-selector-tag">caption</span>&#123;图片标题&#125;  <br>\end&#123;<span class="hljs-selector-tag">figure</span>&#125;<br></code></pre></td></tr></table></figure><p>其中，<code>[htbp]</code> 的作用是自动选择插入图片的最优位置，<code>\centering</code> 设置让图片居中，<code>[width=8cm]</code> 设置了图片的宽度为8cm，<code>\caption&#123;&#125;</code> 用于设置图片的标题。</p><h4 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h4><p>LaTeX 中表格的插入较为麻烦，可以直接使用 <a href="https://www.tablesgenerator.com/#">Create LaTeX tables online – TablesGenerator.com</a> 来生成。建议使用如下方式：</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs tap">\begin&#123;table&#125;[htbp]  <br>\centering  <br>\caption&#123;表格标题&#125;  <br>\begin&#123;tabular&#125;&#123;ccc&#125;  <br>       <span class="hljs-number"> 1 </span>&amp;<span class="hljs-number"> 2 </span>&amp;<span class="hljs-number"> 3 </span>\\  <br>       <span class="hljs-number"> 4 </span>&amp;<span class="hljs-number"> 5 </span>&amp;<span class="hljs-number"> 6 </span>\\  <br>       <span class="hljs-number"> 7 </span>&amp;<span class="hljs-number"> 8 </span>&amp;<span class="hljs-number"> 9 </span> <br>\end&#123;tabular&#125;  <br>\end&#123;table&#125;<br></code></pre></td></tr></table></figure><h4 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h4><p>LaTeX中的列表环境包含无序列表<code>itemize</code>、有序列表<code>enumerate</code>和描述<code>description</code>，以<code>enumerate</code>为例，用法如下：<br>&#96;</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><span class="hljs-string">\begin&#123;enumerate&#125;</span>  <br>    <span class="hljs-string">\item</span> 这是第一点;   <br>    <span class="hljs-string">\item</span> 这是第二点;  <br>    <span class="hljs-string">\item</span> 这是第三点.   <br><span class="hljs-string">\end&#123;enumerate&#125;</span><br></code></pre></td></tr></table></figure><p>另外，也可以自定义<code>\item</code>的样式：</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><span class="hljs-string">\begin&#123;enumerate&#125;</span>  <br>    <span class="hljs-string">\item[(1)]</span> 这是第一点;   <br>    <span class="hljs-string">\item[(2)]</span> 这是第二点;  <br>    <span class="hljs-string">\item[(3)]</span> 这是第三点.   <br><span class="hljs-string">\end&#123;enumerate&#125;</span><br></code></pre></td></tr></table></figure><h4 id="定理环境"><a href="#定理环境" class="headerlink" title="定理环境"></a>定理环境</h4><p>定理环境需要使用<code>amsthm</code>宏包，首先在导言区加入：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">\newtheorem</span><span class="hljs-template-variable">&#123;theorem&#125;</span><span class="hljs-template-variable">&#123;定理&#125;</span><span class="language-xml">[section]</span><br></code></pre></td></tr></table></figure><p>其中 <code>&#123;theorem&#125;</code> 是环境的名称，<code>&#123;定理&#125;</code> 设置了该环境显示的名称是“定理”，<code>[section]</code> 的作用是让 <code>theorem</code> 环境在每个 section 中单独编号。在正文中，用如下方式来加入一条定理：</p><figure class="highlight mizar"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mizar">\<span class="hljs-keyword">begin</span>&#123;<span class="hljs-keyword">theorem</span>&#125;[定理名称]  <br>这里是定理的内容.   <br>\<span class="hljs-keyword">end</span>&#123;<span class="hljs-keyword">theorem</span>&#125;<br></code></pre></td></tr></table></figure><p>其中 <code>[定理名称]</code> 不是必须的。另外，我们还可以建立新的环境，如果要让新的环境和 <code>theorem</code> 环境一起计数的话，可以用如下方式：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">\newtheorem</span><span class="hljs-template-variable">&#123;theorem&#125;</span><span class="hljs-template-variable">&#123;定理&#125;</span><span class="language-xml">[section]  </span><br><span class="language-xml">\newtheorem</span><span class="hljs-template-variable">&#123;definition&#125;</span><span class="language-xml">[theorem]</span><span class="hljs-template-variable">&#123;定义&#125;</span><span class="language-xml">  </span><br><span class="language-xml">\newtheorem</span><span class="hljs-template-variable">&#123;lemma&#125;</span><span class="language-xml">[theorem]</span><span class="hljs-template-variable">&#123;引理&#125;</span><span class="language-xml">  </span><br><span class="language-xml">\newtheorem</span><span class="hljs-template-variable">&#123;corollary&#125;</span><span class="language-xml">[theorem]</span><span class="hljs-template-variable">&#123;推论&#125;</span><span class="language-xml">  </span><br><span class="language-xml">\newtheorem</span><span class="hljs-template-variable">&#123;example&#125;</span><span class="language-xml">[theorem]</span><span class="hljs-template-variable">&#123;例&#125;</span><span class="language-xml">  </span><br><span class="language-xml">\newtheorem</span><span class="hljs-template-variable">&#123;proposition&#125;</span><span class="language-xml">[theorem]</span><span class="hljs-template-variable">&#123;命题&#125;</span><br></code></pre></td></tr></table></figure><h4 id="页面"><a href="#页面" class="headerlink" title="页面"></a>页面</h4><p>最开始选择文件类型时，我们设置的页面大小是a4paper，除此之外，我们也可以修改页面大小为b5paper等等。</p><p>一般情况下，LaTeX 默认的页边距很大，为了让每一页显示的内容更多一些，我们可以使用 <code>geometry</code> 宏包，并在导言区加入以下代码：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">\usepackage&#123;geometry&#125;  <br>\geometry&#123;<span class="hljs-attribute">left</span>=2.54cm, <span class="hljs-attribute">right</span>=2.54cm, <span class="hljs-attribute">top</span>=3.18cm, <span class="hljs-attribute">bottom</span>=3.18cm&#125;<br></code></pre></td></tr></table></figure><p>另外，为了设置行间距，可以使用如下代码：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">\linespread</span><span class="hljs-template-variable">&#123;1.5&#125;</span><br></code></pre></td></tr></table></figure><h4 id="页码"><a href="#页码" class="headerlink" title="页码"></a>页码</h4><p>默认的页码编码方式是阿拉伯数字，用户也可以自己设置为小写罗马数字：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">\pagenumbering</span><span class="hljs-template-variable">&#123;roman&#125;</span><br></code></pre></td></tr></table></figure><p>另外，<code>aiph</code> 表示小写字母，<code>Aiph</code> 表示大写字母，<code>Roman</code> 表示大写罗马数字，<code>arabic</code> 表示默认的阿拉伯数字。如果要设置页码的话，可以用如下代码来设置页码从0开始：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">\setcounter</span><span class="hljs-template-variable">&#123;page&#125;</span><span class="hljs-template-variable">&#123;0&#125;</span><br></code></pre></td></tr></table></figure><h2 id="数学公式的输入方式"><a href="#数学公式的输入方式" class="headerlink" title="数学公式的输入方式"></a>数学公式的输入方式</h2><h3 id="行内公式"><a href="#行内公式" class="headerlink" title="行内公式"></a>行内公式</h3><p>行内公式通常使用<code>$..$</code>来输入，这通常被称为公式环境，例如：</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crystal">若<span class="hljs-variable">$a</span>&gt;<span class="hljs-number">0</span><span class="hljs-variable">$,</span> <span class="hljs-variable">$b</span>&gt;<span class="hljs-number">0</span><span class="hljs-variable">$,</span> 则<span class="hljs-variable">$a</span>+b&gt;<span class="hljs-number">0</span><span class="hljs-variable">$.</span><br></code></pre></td></tr></table></figure><p>公式环境通常使用特殊的字体，并且默认为斜体。需要注意的是，只要是公式，就需要放入公式环境中。如果需要在行内公式中展现出行间公式的效果，可以在前面加入 <code>\displaystyle</code>，例如</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">设$\displaystyle\lim_&#123;n\<span class="hljs-keyword">to</span>\infty&#125;<span class="hljs-attribute">x_n</span>=x$.<br></code></pre></td></tr></table></figure><h3 id="行间公式"><a href="#行间公式" class="headerlink" title="行间公式"></a>行间公式</h3><p>行间公式需要用 <code>$$..$$</code> 来输入，输入方式如下：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gams">若<span class="hljs-symbol">$</span>a&gt;<span class="hljs-number">0</span><span class="hljs-symbol">$</span>, <span class="hljs-symbol">$</span>b&gt;<span class="hljs-number">0</span><span class="hljs-symbol">$</span>, 则  <br><span class="hljs-symbol">$</span><span class="hljs-symbol">$</span>  <br>a+b&gt;<span class="hljs-number">0.</span>  <br><span class="hljs-symbol">$</span><span class="hljs-symbol">$</span><br></code></pre></td></tr></table></figure><h3 id="多行公式"><a href="#多行公式" class="headerlink" title="多行公式"></a>多行公式</h3><p>多行公式通常使用 <code>aligned</code> 环境，例如</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs crystal"><span class="hljs-variable">$$</span>  <br>\<span class="hljs-keyword">begin</span>&#123;aligned&#125;  <br>a &amp; =b+c \\  <br>&amp; =d+e  <br>\<span class="hljs-keyword">end</span>&#123;aligned&#125;  <br><span class="hljs-variable">$$</span><br></code></pre></td></tr></table></figure><h3 id="分式"><a href="#分式" class="headerlink" title="分式"></a>分式</h3><p>分式可以用 <code>\dfrac&#123;&#125;&#123;&#125;</code> 来输入，例如 <code>\dfrac&#123;a&#125;&#123;b&#125;</code>，效果为 $\frac{a}{b}$。为了在行间、分子、分母或者指数上输入较小的分式，可以改用 <code>\frac&#123;&#125;&#123;&#125;</code>，例如 <code>a^\frac&#123;1&#125;&#123;n&#125;</code>，效果为 $a^{1&#x2F;n}$。</p><h3 id="括号"><a href="#括号" class="headerlink" title="括号"></a>括号</h3><p>括号可以直接用 <code>(..)</code> 输入，但是需要注意的是，有时候括号内的内容高度较大，需要改用 <code>\left(..\right)</code>。例如 <code>\left(1+\dfrac&#123;1&#125;&#123;n&#125;\right)^n</code>，效果是 $\left( 1+\frac{1}{n} \right)^n$。</p><p>在中间需要隔开时，可以用<code>\left(..\middle|..\right)</code>。</p><p>另外，输入大括号{}时需要用 <code>\&#123;..\&#125;</code>，其中 <code>\</code> 起到了转义作用。</p><h3 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a>加粗</h3><p>对于加粗的公式，建议使用 <code>bm</code> 宏包，并且用命令 <code>\bm&#123;&#125;</code> 来加粗，这可以保留公式的斜体。</p><h3 id="大括号"><a href="#大括号" class="headerlink" title="大括号"></a>大括号</h3><p>在这里可以使用 <code>cases</code> 环境，可以用于分段函数或者方程组，例如</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs llvm">$$  <br>f(<span class="hljs-keyword">x</span>)<span class="hljs-operator">=</span>\<span class="hljs-keyword">begin</span>&#123;cases&#125;  <br><span class="hljs-keyword">x</span><span class="hljs-punctuation">,</span> &amp; <span class="hljs-keyword">x</span>&gt;<span class="hljs-number">0</span><span class="hljs-punctuation">,</span> \\  <br>-<span class="hljs-keyword">x</span><span class="hljs-punctuation">,</span> &amp; <span class="hljs-keyword">x</span>\leq <span class="hljs-number">0</span>.  <br>\<span class="hljs-keyword">end</span>&#123;cases&#125;  <br>$$<br></code></pre></td></tr></table></figure><h3 id="矩阵和行列式"><a href="#矩阵和行列式" class="headerlink" title="矩阵和行列式"></a>矩阵和行列式</h3><p>矩阵可以用 <code>bmatrix</code> 环境和 <code>pmatrix</code> 环境，分别为方括号和圆括号，例如</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs crystal"><span class="hljs-variable">$$</span>  <br>\<span class="hljs-keyword">begin</span>&#123;bmatrix&#125;  <br>a &amp; b \\  <br>c &amp; d  <br>\<span class="hljs-keyword">end</span>&#123;bmatrix&#125;  <br><span class="hljs-variable">$$</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>摘抄_LaTeX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>静态博客搭建初级指南1.0</title>
    <link href="/2024/03/25/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%971.0/"/>
    <url>/2024/03/25/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%971.0/</url>
    
    <content type="html"><![CDATA[<h3 id="方案选择"><a href="#方案选择" class="headerlink" title="方案选择"></a>方案选择</h3><ul><li><p>Netlify <br>  一个静态网页生成器，可以快速地构建和发布个人或团队的网站</p></li><li><p>hexo<br>  Hexo 是一个快速、简洁且高效的静态博客框架，它基于 Node.js 运行，可以将我们撰写的 Markdown 文档解析渲染成静态的 HTML 网页</p></li><li><p><strong>GitHub Pages</strong><br> GitHub Pages 是由 GitHub 官方提供的一种免费的静态站点托管服务，让我们可以在 GitHub 仓库里托管和发布自己的静态网站页面</p></li><li><p><strong>Hexo + GitHub 文章发布原理</strong><br>  在本地撰写 Markdown 格式文章后，通过 Hexo 解析文档，渲染生成具有主题样式的 HTML 静态网页，再推送到 GitHub 上完成博文的发布。</p></li><li><p>Ruby<br>  一种面向对象、指令式、函数式、动态的通用编程语言</p></li><li><p>Gem<br>  <em>Gem</em> 是 <em>Ruby</em> 中的包，其中包含包信息，以及用于安装的文件</p></li><li><p>Gemfile<br>  一种描述 Ruby 程序的 gem 依赖关系的格式</p></li><li><p>最后采用了 hexo+github pages 的方案</p></li></ul><h3 id="第一次尝试"><a href="#第一次尝试" class="headerlink" title="第一次尝试"></a>第一次尝试</h3><blockquote><p>[!note]  熟悉了基本流程，但是觉得生成部署有点麻烦，后面发现有 github action 可以自动部署(2.0)，折腾了两天，暂时没问题了</p></blockquote><h4 id="参考教程"><a href="#参考教程" class="headerlink" title="参考教程"></a>参考教程</h4><ul><li><a href="https://techniquenotes.github.io/2024/02/20/Hexo/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B%EF%BC%88%E4%B8%80%EF%BC%89/">Hexo 博客搭建教程</a></li><li><a href="https://techniquenotes.github.io/2024/02/20/Hexo/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B%EF%BC%88%E4%BA%8C%EF%BC%89/"> Hexo 博客搭建教程（二）</a></li></ul><h4 id="本地配置"><a href="#本地配置" class="headerlink" title="本地配置"></a>本地配置</h4><ul><li><p>安装hexo</p><ul><li>创建一个文件夹 MyBlog，用来存放自己的博客文件，然后 cd 到这个文件夹下（或者在这个文件夹下直接右键 git bash 打开）。</li><li>定位到该目录下，输入 <code>npm install -g hexo-cli </code>安装 Hexo。可能会有几个报错，无视它就行。</li><li>安装完 <code>hexo -v</code> 验证安装成功没</li></ul></li><li><p>初始化</p><ul><li>在主题根目录 <code>hexo init</code><ul><li>初始化失败注意根目录的位置（在三层？）</li></ul></li><li>安装必备组件 <code>npm install</code><br>   这时指定目录会有几个文件夹</li></ul></li><li><p>预览</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs verilog">hexo g (hexo <span class="hljs-keyword">generate</span>)<br>hexo server(或者简写:hexo s）)<br></code></pre></td></tr></table></figure></li></ul><h4 id="连接-github-到本地"><a href="#连接-github-到本地" class="headerlink" title="连接 github 到本地"></a>连接 github 到本地</h4><ul><li><p>在 MyBlog 中右键打开 git bash，第一次使用 git 后需要将用户名和邮箱进行初始化 </p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.name</span> <span class="hljs-string">&quot;yohakuo&quot;</span><br>git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.email</span> <span class="hljs-string">&quot;2394791478@qq.com&quot;</span><br></code></pre></td></tr></table></figure></li><li><p>检查</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">git config <span class="hljs-keyword">user</span>.name<br>git config <span class="hljs-keyword">user</span>.email<br></code></pre></td></tr></table></figure></li><li><p>ssh<br> ssh，简单来讲，就是一个秘钥，其中，id_rsa 是你这台电脑的私人秘钥，不能给别人看的，id_rsa. pub 是公共秘钥，可以随便给别人看。把这个公钥放在 GitHub 上，这样当你链接 GitHub 自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过 git 上传你的文件到 GitHub 上。</p></li><li><p>创建 SSH</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs excel">ssh-keygen -<span class="hljs-built_in">t</span> rsa -C <span class="hljs-string">&quot;2394791478@qq.com&quot;</span><br></code></pre></td></tr></table></figure></li><li><p>检验是否创建成功</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ssh</span> -T git<span class="hljs-variable">@github</span>.com<br></code></pre></td></tr></table></figure></li></ul><h4 id="将-hexo-部署到-github"><a href="#将-hexo-部署到-github" class="headerlink" title="将 hexo 部署到 github"></a>将 hexo 部署到 github</h4><p>这一步，我们就可以将 hexo 和 GitHub 关联起来，也就是将 hexo 生成的文章部署到 GitHub 上，打开博客根目录下的_config. yml 文件，这是博客的配置文件，在这里你可以修改与博客配置相关的各种信息。修改最后一行的配置：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"># Deployment <br>## Docs: https:<span class="hljs-comment">//hexo.io/docs/one-command-deployment </span><br>deploy:<br>  type: <span class="hljs-string">&#x27;git&#x27;</span><br>  repository: https:<span class="hljs-comment">//github.com/yohakuo/yohakuo.github.io.git</span><br>  branch: main<br></code></pre></td></tr></table></figure><ul><li><p>注意空格</p></li><li><p>repository 修改为你自己的 github 项目地址即可就是部署时，告诉工具，将生成网页通过 git 方式上传到你对应的链接仓库中。</p></li><li><p>先安装部署的命令</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install hexo-deployer-git <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure></li><li><p>部署</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs verilog">hexo clean <span class="hljs-comment">//缩写成 hexo cl</span><br>hexo <span class="hljs-keyword">generate</span> <span class="hljs-comment">// 缩写 hexo g</span><br>hexo deploy <span class="hljs-comment">// hexo deploy</span><br></code></pre></td></tr></table></figure></li></ul><h4 id="写文章、发布"><a href="#写文章、发布" class="headerlink" title="写文章、发布"></a>写文章、发布</h4><ul><li><p>先安装拓展</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> i hexo-deployer-git<br></code></pre></td></tr></table></figure></li><li><p>新建博客</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type">post</span> <span class="hljs-string">&quot;name&quot;</span><br></code></pre></td></tr></table></figure></li><li><p>然后在 <code>source\ _posts </code> 目录可以看到. md 文件</p></li><li><p>实时预览和发布<br>  编写完 markdown 文件后，在根目录用 <code>hexo g</code> 生成静态网页，<code>hexo s</code> 本地预览<br>  如果没有问题可以 <code>hexo d</code> 上次到github</p></li></ul><h4 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h4><ul><li>本地预览      <a href="http://localhost:4000/404.html">http://localhost:4000/404.html</a></li></ul><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><h4 id="git-clone-失败"><a href="#git-clone-失败" class="headerlink" title="git clone 失败"></a>git clone 失败</h4><ul><li>取消 http 代理<figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs tcl">git config --<span class="hljs-keyword">global</span> --<span class="hljs-keyword">unset</span> <span class="hljs-keyword">http</span>. proxy<br></code></pre></td></tr></table></figure></li><li>取消 https 代理 <figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-comment">git config</span> <span class="hljs-literal">--</span><span class="hljs-comment">global</span> <span class="hljs-literal">--</span><span class="hljs-comment">unset https</span><span class="hljs-string">.</span> <span class="hljs-comment">proxy</span><br></code></pre></td></tr></table></figure></li></ul><h4 id="error-key-does-not-contain-variable-name-user"><a href="#error-key-does-not-contain-variable-name-user" class="headerlink" title="error: key does not contain variable name: user."></a>error: key does not contain variable name: user.</h4><ul><li>转为手动输入</li></ul><h4 id="css-渲染失败"><a href="#css-渲染失败" class="headerlink" title="css 渲染失败"></a>css 渲染失败</h4><ul><li>文件名内有非法字符 # ，换目录，目录最好是 <code>x:/xx/xx</code> <ul><li>新建目录 <code>x:/x</code> 也遇到了问题</li></ul></li><li><a href="https://github.com/MOxFIVE/hexo-theme-yelee/issues/245">ERROR Asset render failed: css&#x2F;style.css · Issue</a></li></ul><h4 id="打开网页是空白，警告：No-layout"><a href="#打开网页是空白，警告：No-layout" class="headerlink" title="打开网页是空白，警告：No layout"></a>打开网页是空白，警告：No layout</h4><ul><li>可能是主题配置的问题</li><li>存在两个主题的<code>.yml</code> 文件</li></ul><h4 id="hexo-s-访问失败，-hexo-d-报错"><a href="#hexo-s-访问失败，-hexo-d-报错" class="headerlink" title="hexo s 访问失败， hexo d 报错"></a>hexo s 访问失败， hexo d 报错</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vim">localhost 已拒绝连接<br><br>fatal: <br>unable <span class="hljs-keyword">to</span> access  https://github.<span class="hljs-keyword">com</span>/yohakuo/yohakuo.github.io.git/<br>Could not <span class="hljs-built_in">resolve</span> host: github. <span class="hljs-keyword">com</span><br></code></pre></td></tr></table></figure><ul><li>更改 DNS 为 Gogle 后还是无法本地预览，但发布成功了</li></ul>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>blog</tag>
      
      <tag>github</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>静态博客搭建初级指南2.0</title>
    <link href="/2024/03/25/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%972.0/"/>
    <url>/2024/03/25/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%972.0/</url>
    
    <content type="html"><![CDATA[<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://hexo.io/zh-cn/docs/github-pages">在 GitHub Pages 上部署 Hexo | Hexo</a></li><li><a href="https://oreo.life/blog/2021-09-01-deploy-hexo-with-github-actions-1/">轮子再造 | 使用 GitHub Actions 自动部署 Hexo 博客 - 上篇 | On my way to Oodi (oreo.life)</a></li></ul><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><ul><li><p>切换分支</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">git checkout <span class="hljs-selector-tag">main</span><br></code></pre></td></tr></table></figure></li><li><p>保存更改并推送到 GitHub：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">git <span class="hljs-built_in">add</span> .  <br></code></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">git</span> commit -m <span class="hljs-string">&quot;main workflow configure&quot;</span>  <br></code></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">git</span> commit -m <span class="hljs-string">&quot;Vault backup&quot;</span><br></code></pre></td></tr></table></figure><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima">git <span class="hljs-built_in">push</span> -u <span class="hljs-built_in">origin</span> main<br></code></pre></td></tr></table></figure></li><li><p>暂存更改（将它们暂存起来，然后在合并分支后再恢复）</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">git stash</span><br></code></pre></td></tr></table></figure><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coq">git stash <span class="hljs-built_in">apply</span><br></code></pre></td></tr></table></figure></li><li><p>删除这些更改</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">git stash drop</span><br></code></pre></td></tr></table></figure></li><li><p>删除远程分支</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima">git <span class="hljs-built_in">push</span> <span class="hljs-built_in">origin</span> --<span class="hljs-built_in">delete</span><br></code></pre></td></tr></table></figure></li><li><p>关联分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git branch -u origin/main<br></code></pre></td></tr></table></figure></li><li><p>文件和文件夹的删除</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml">git rm <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml">git rm -r <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ul><h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><ul><li>文章配置 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter | Hexo</a></li><li>主题配置 <a href="https://hexo.fluid-dev.com/docs/guide/#%E6%9C%AC%E5%9C%B0%E6%90%9C%E7%B4%A2">配置指南 | Hexo Fluid 用户手册 (fluid-dev.com)</a></li></ul><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><h4 id="You-have-unmerged-paths"><a href="#You-have-unmerged-paths" class="headerlink" title="You have unmerged paths."></a>You have unmerged paths.</h4><ul><li>查看下暂存区修改后的文件状态。<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">git status</span><br></code></pre></td></tr></table></figure></li><li>eg<ul><li>![[Pasted image 20240320103632.png|520]]</li><li>来到标红的文件进行修改，再次 push <code>**MERGING**</code> 就没有了</li></ul></li></ul><h4 id="git-push-u-origin-–-fatal-unable-to-access"><a href="#git-push-u-origin-–-fatal-unable-to-access" class="headerlink" title="git push -u origin –&gt; fatal: unable to access"></a>git push -u origin –&gt; fatal: unable to access</h4><ul><li>远程仓库和本地不一致，且远程有的文件本地没有</li><li>查询并取消代理<figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs tcl">git config --<span class="hljs-keyword">global</span> <span class="hljs-keyword">http</span>.proxy<br> <br>git config --<span class="hljs-keyword">global</span> --<span class="hljs-keyword">unset</span> <span class="hljs-keyword">http</span>.proxy<br></code></pre></td></tr></table></figure></li><li>修改dns<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml">git pull origin <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>blog</tag>
      
      <tag>github</tag>
      
      <tag>github action</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>

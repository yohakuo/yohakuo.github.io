<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>2024-W17</title>
    <link href="/2024/04/28/2024-W17/"/>
    <url>/2024/04/28/2024-W17/</url>
    
    <content type="html"><![CDATA[<p>本篇是对 <code>2024-04-22 </code> 到 <code> 2024-04-28</code> 这一周生活的记录与思考。</p><p>本周不怎么想做每日一句（也不知道阅读英语相关的其他东西，比如翻译文档算不算一种练习），遇到不会的词语查英英字典。</p><p>数学看课太慢了，决定看书试试。下周开始换个环境（去图书馆）。</p><h2 id="如何不伤害膝盖">如何不伤害膝盖</h2><p>膝盖弯曲的角度最好不要超过 50-60（直立时能看到脚尖），或者120 度以上也可以。</p><p>上楼梯好脚在前下楼梯坏脚在前。</p><h2 id="haima大会">haima大会</h2><blockquote><p>8 月 24 日东京<br>我是看到群里的消息才知道的，有个姐妹申请当助手，并且询问有没有同行人（我也很想去，还在脑子里幻想了一下瞒着我妈去的场景）。我感觉她得到的回应比较少，刚好又有另一个群，于是就询问了她要不要加入，也算是牵线了。</p></blockquote><h1>5G 相关</h1><h2 id="5G-A-的基本特征">5G-A 的基本特征</h2><p>下行一万兆（10 GbpS），上行一千兆（1 Gbps）<br>即一秒钟下载 10 个 G ,上传 1 G</p><h2 id="科技案例">科技案例</h2><blockquote><p>按连接方式分类</p></blockquote><h3 id="人与人">人与人</h3><p>杭州万兆网速之下的裸眼 3D 亚运会的观察</p><p>香港电讯 5G-A 网络让 XR (扩展现实, 包括 VR、AR【增强现实】、MR【混合现实】) 成为可能</p><h3 id="人和家庭">人和家庭</h3><p>沙特引用了华为的 FWA（Fixed Wireless Access，固定无线接入）。<br>FWA是一种无线通信技术，它提供了类似于有线宽带的互联网接入服务，但通过无线方式实现。FWA主要用于家庭或企业宽带接入，尤其适合于那些难以铺设有线网络，如光纤或电缆的地区。</p><p>阿联酋的 DU 推出的5 G-A 智慧家庭升级固定无线接入。<br>这种服务通过5G网络实现固定无线接入（FWA），让用户在家中可以享受到高速的互联网连接，而不需要传统的有线宽带连接。</p><p>芬兰使用 5G-A 的系统进行整体网络升级</p><h3 id="物和物">物和物</h3><p>Redcap，是一种轻量级的5G通信技术，旨在通过降低终端频谱带宽、使用较少数量的接收天线等技术手段，实现低成本、高性能的5G通信解决方案。</p><p>5G+AI 在深圳的实例–垃圾分类的全流程管理</p><p>物联赋能给亚运圆通智慧物流<br>海尔智能的仓库存储盘点</p><h3 id="行业与行业-（企业之间）">行业与行业 （企业之间）</h3><p>长城精工构建了全球首条5G-A汽车柔性产线。这条产线不仅提高了生产效率和产能，还通过使用5G-A技术实现了超低时延和高可靠性，这对于提升生产线的智能化和自动化水平具有重要意义。</p><h3 id="车与车">车与车</h3><p>杭州 5G-A 通感车联护航指挥系统</p><h2 id="华为最新发布无线智能体">华为最新发布无线智能体</h2><blockquote><p><a href="https://mp.weixin.qq.com/s/6TiF-JfjMHWv01QkjcJSyA">来自这里</a></p></blockquote><p>2024 年，通信行业最引人关注的焦点是 5 G-A（5 G 和 6 G 之间的过渡）。<br>3 GPP R 18（5 G-Advanced 标准的第一个版本）版本即将在上半年正式冻结。R 18 的冻结，意味着 5 G-A 将全面进入商用阶段。</p><p>不久前，中国移动率先公布了首批 100 个 5 G-A 商用城市名单，并计划在 2024 年底前，将 5 G-A 商用城市扩大到 300 个以上。中国电信和中国联通也在加速布局，积极推进 5 G-A 的商用部署。根据最新的数据，全球已有 10 多家运营商启动了 5 G-A 的商用计划，超过 30 家运营商开展了相关技术验证。</p><p>我们关注 5 G-A，到底是关注它的什么呢？</p><h3 id="通信-AI-无线智能体"><strong>通信+AI=无线智能体</strong></h3><p>无线智能体是什么？<br>首先，无线智能体的底层，是通信大模型、无线数字孪生系统和智能算力。（技术）<br>其次，无线智能体，将在 5 G-A 中进行应用落地。（时间）<br>第三，无线智能体可以用于改善运维流程、优化网络体验和重塑业务发展模式。（场景）<br>第四，无线智能体将为运营商服务，提升网络生产力。（目的）</p><h1>资源</h1><p><a href="https://sspai.com/post/78133">把阅读作为方法：从选书到笔记的经验分享</a></p><blockquote><p>好文</p></blockquote><p><a href="https://oldwestenglish.github.io/grammar/#/">英语语法</a></p>]]></content>
    
    
    <categories>
      
      <category>个人记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>weekly</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>小区搜索</title>
    <link href="/2024/04/23/cell%20search%20procedure/"/>
    <url>/2024/04/23/cell%20search%20procedure/</url>
    
    <content type="html"><![CDATA[<blockquote><p>温金辉的博文<br><a href="https://www.bilibili.com/video/BV1Kg4y1k71m/?spm_id_from=333.337.search-card.all.click&amp;vd_source=d137a8f68ec67946b0fef9810258f095">b站</a></p></blockquote><h2 id="概要">概要</h2><p>4G 中的小区搜索过程。主要涉及PSS/SSS以及UE通过PSS/SSS能够得到哪些有用的信息。<br>UE要接入LTE网络，必须经过小区搜索、获取小区系统信息、随机接入等过程。<br>时间同步和频率同步。</p><p>5G 中的变化<br><img src="https://cdn.jsdelivr.net/gh/yohakuo/CDN/img/202404250842254.png" alt="image.png|320"><br>在5G中，由于带宽增加,同步信号可能不在信道中间,需要引入同步栅格来提高搜索速度。</p><h2 id="小区搜索的主要目的">小区搜索的主要目的</h2><ol><li>与小区取得频率和符号同步；</li><li>获取系统帧timing，即下行帧的起始位置；</li><li>确定小区的PCI。</li></ol><h2 id="UE-的小区搜索状态">UE 的小区搜索状态</h2><pre><code class="hljs">gNB发送同步信号，UE开机。UE在开机时进行小区搜索，为了支持移动性，UE还会不停地搜索邻居小区、取得同步并估计该小区信号的接收质量，从而决定是否进行切换（handover，当UE处于RRC_CONNECTED态）或小区重选（cell re-selection，当UE处于RRC_IDLE态）。当UE处于RRC_CONNECTED态时，它会根据当前服务小区的质量和邻近小区的信号强度来决定是否进行切换。切换是指在UE移动过程中，当发现当前服务小区的信号质量不再满足UE的需求时，UE会寻找一个更优质的小区，并向该小区发起切换请求，从而转移到新的小区继续通信。切换的成功与否直接影响着用户业务体验和使用。当UE处于RRC_IDLE态时，它会通过小区重选机制选择信号质量最好的小区进行驻留。小区重选是空闲模式中最重要的一项任务，通过小区重选，UE端驻留到优质的小区中。LTE系统中的小区重选由终端根据一定的测量规则和重选准则自主完成。这些测量规则和重选准则包括了对当前服务小区和邻近小区的RSRP（参考信号接收功率）测量，以及周期性测量触发的小区重选和事件触发的小区重选过程。</code></pre><h2 id="PCI的分配和管理"><strong>PCI的分配和管理</strong></h2><p>LTE一共定义了504个不同的PCI(对应协议36.211中的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>N</mi><mrow><mi>I</mi><mi>D</mi></mrow><mrow><mi>c</mi><mi>e</mi><mi>l</mi><mi>l</mi></mrow></msubsup></mrow><annotation encoding="application/x-tex">N^{cell}_{ID}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1244em;vertical-align:-0.2753em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.4247em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ce</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">ll</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2753em;"><span></span></span></span></span></span></span></span></span></span>)，且每个PCI对应一个特定的下行参考信号序列。所有PCI的集合被分成168个组（对应协议中的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><msubsup><mi>N</mi><mrow><mi>I</mi><mi>D</mi></mrow><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">3 N^{(1)}_{ID}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3383em;vertical-align:-0.2935em;"></span><span class="mord">3</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4065em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2935em;"><span></span></span></span></span></span></span></span></span></span> 取值范围0 ~ 167），每组包含3个小区ID（对应协议中的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><msubsup><mi>N</mi><mrow><mi>I</mi><mi>D</mi></mrow><mrow><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">3 N^{(2)}_{ID}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3383em;vertical-align:-0.2935em;"></span><span class="mord">3</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4065em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">2</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2935em;"><span></span></span></span></span></span></span></span></span></span>，取值范围0 ~ 2）。</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>N</mi><mrow><mi>I</mi><mi>D</mi></mrow><mrow><mi>c</mi><mi>e</mi><mi>l</mi><mi>l</mi></mrow></msubsup><mo>=</mo><mn>3</mn><msubsup><mi>N</mi><mrow><mi>I</mi><mi>D</mi></mrow><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msubsup><mo>+</mo><msubsup><mi>N</mi><mrow><mi>I</mi><mi>D</mi></mrow><mrow><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">N^{cell}_{ID}=3N^{(1)}_{ID}+N^{(2)}_{ID}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1461em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ce</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">ll</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.3383em;vertical-align:-0.2935em;"></span><span class="mord">3</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4065em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2935em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.3383em;vertical-align:-0.2935em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4065em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">2</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2935em;"><span></span></span></span></span></span></span></span></span></span></span></p><h2 id="同步信号PSS和SSS"><strong>同步信号PSS和SSS</strong></h2><p>为了支持小区搜索，LTE定义了2个下行同步信号：PSS和SSS。</p><blockquote><p>补充<br>在TDD模式下，基站和移动设备在同一频率上进行通信，但是通过时间来区分上下行链路，即在一个无线帧中，上行链路和下行链路的传输是在不同的时间段内完成的。这种模式允许基站和移动设备在相同的频率上交替使用，从而有效地利用频谱资源。</p><p>相比之下，FDD模式下，基站和移动设备在分离的两个频率信道上进行通信，每个方向的通信占用一个频率信道，这样可以避免信号之间的干扰。FDD模式通常用于需要较大带宽的应用环境中，因为它能够提供足够的保护带宽来区分上下行链路。</p><p>一个无线帧（frame）的长度固定为10毫秒（ms），这是时间的基本单位。<br>每个子帧的持续时间为1毫秒（ms），是帧的一个小部分。<br>每个子帧由多个时隙组成，这些时隙是子帧的最小时间单位。</p><p>LTE 和 5 G 时隙（Slot）包含的符号（Symbol）数量有所不同。<br>对于 LTE，如果系统采用普通 CP（Normal CP），每个时隙包含 7 个 OFDM 符号；<br>如果是扩展 CP（Extended CP），则每个时隙包含 6 个 OFDM 符号。<br>而对于 5 G，无论子载波间隔多大，一个时隙都包括 14 个 OFDM 符号。</p></blockquote><p>对于TDD和FDD而言，这2类同步信号的结构是完全一样的，但在帧中时域位置有所不同。</p><ul><li><p>对于FDD而言，<br>PSS在子帧0和5的第一个slot的最后一个symbol中发送；<br>SSS与PSS在同一子帧同一slot发送，但SSS位于倒数第二个symbol中，比PSS提前一个symbol；</p></li><li><p>对于TDD而言，<br>PSS在子帧1和6（即DwPTS，下行导频时隙）的第三个symbol中发送；<br>而SSS在子帧0和5的最后一个symbol中发送，比PSS提前3个symbol。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/yohakuo/CDN/img/202404171105173.png" alt="FDD或TDD中，PSS/SSS的时域位置"></p><blockquote><p>[!center] 图 1.1</p></blockquote><p>UE开机时并不知道系统带宽的大小，但它知道自己支持的频带和带宽。<br> <br> 为了使UE能够尽快检测到系统的频率和符号同步信息，无论系统带宽大小，PSS和SSS都位于中心的72个子载波上（即中心的6个RB上，不包含DC。实际只使用了频率中心DC周围的62个子载波，两边各留了5个子载波用作保护波段）。UE会在其支持的LTE频率的中心频点附近去尝试接收PSS和SSS。</p><blockquote><p><strong>中心子载波的通用性</strong>提高了搜索效率。</p><p>保护波段减少由于频率偏移或符号时钟偏移导致的同步信号的干扰，使得信号更加稳定，便于UE检测。</p><p>通过将PSS和SSS固定在中心的72个子载波上，UE不需要在整个频带范围内搜索，而是只需要在中心频率附近搜索。</p><p>通过PSS，UE可以确定小区的PCI（根据PSS 序列与 PCI 的对应关系）。而SSS则提供了额外的同步信息，帮助UE确定系统帧的10ms定时信息。</p></blockquote><h3 id="PSS-的结构和作用"><strong>PSS 的结构和作用</strong></h3><p>PSS 使用长度为 63 的 Zadoff-Chu 序列（中间有 DC 子载波，所以实际上传输的长度为 62），加上边界额外预留的用作保护频段的 5 个子载波，形成了占据中心 72 个子载波（不包含 DC）的 PSS。</p><blockquote><p>Zadoff-Chu序列具有接近理想的自相关特性，这意味着当序列与其自身错位时，自相关值会非常高，而与其他序列错位时，自相关值会非常低。这使得UE能够通过计算自相关来检测PSS序列，即使在有噪声的情况下也能准确识别。</p><p>不同的Zadoff-Chu序列之间具有良好的正交性，即它们相互之间的相关性很低。这有助于UE区分不同的小区，因为每个小区的PSS序列由其PCI决定，且不同PCI对应的PSS序列是不同的。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/yohakuo/CDN/img/202404240940402.png" alt="800"><br>PSS 有 3 个取值，对应 3 种不同的 Zadoff-Chu 序列，每种序列对应一个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>N</mi><mrow><mi>I</mi><mi>D</mi></mrow><mrow><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">N^{(2)}_{ID}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3383em;vertical-align:-0.2935em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4065em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">2</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2935em;"><span></span></span></span></span></span></span></span></span></span>。某个小区的 PSS 对应的序列由该小区的 PCI 决定，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>N</mi><mrow><mi>I</mi><mi>D</mi></mrow><mrow><mi>c</mi><mi>e</mi><mi>l</mi><mi>l</mi></mrow></msubsup><mtext> </mtext><mi mathvariant="normal">%</mi><mtext> </mtext><mn>3</mn></mrow><annotation encoding="application/x-tex">N^{cell}_{ID} \,\% \,3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1244em;vertical-align:-0.2753em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-2.4247em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ce</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">ll</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2753em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">%</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3</span></span></span></span> 。</p><p>不同的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>N</mi><mrow><mi>I</mi><mi>D</mi></mrow><mrow><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">N^{(2)}_{ID}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3383em;vertical-align:-0.2935em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4065em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">2</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2935em;"><span></span></span></span></span></span></span></span></span></span> 对应不同的 Root index <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi></mrow><annotation encoding="application/x-tex">u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">u</span></span></span></span>（见下表），进而决定了不同 Zadoff-Chu 序列。</p><table><thead><tr><th><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>N</mi><mrow><mi>I</mi><mi>D</mi></mrow><mrow><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">N^{(2)}_{ID}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3383em;vertical-align:-0.2935em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4065em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">2</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2935em;"><span></span></span></span></span></span></span></span></span></span></th><th>Root index <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi></mrow><annotation encoding="application/x-tex">u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">u</span></span></span></span></th></tr></thead><tbody><tr><td>0</td><td>25</td></tr><tr><td>1</td><td>29</td></tr><tr><td>2</td><td>334</td></tr><tr><td>UE 为了接收 PSS，会使用表中指定的 Root index u 来尝试解码 PSS，直到其中某个 Root index <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi></mrow><annotation encoding="application/x-tex">u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">u</span></span></span></span> 成功解出 PSS 为止。这样，UE 就知道了该小区的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>N</mi><mrow><mi>I</mi><mi>D</mi></mrow><mrow><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">N^{(2)}_{ID}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3383em;vertical-align:-0.2935em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4065em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">2</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2935em;"><span></span></span></span></span></span></span></span></span></span> 。又由于 PSS 在时域上的位置是固定的（图 1 ），UE 又可以得到该小区的 5 ms timing（一个系统帧内有两个 PSS，且这两个 PSS 的相同的，因此 UE 不知道解出的 PSS 是第一个还是第二个，所以只能得到 5 ms timing）</td><td></td></tr></tbody></table><h3 id="SSS的结构和解码过程"><strong>SSS的结构和解码过程</strong></h3><p>与 PSS 类似，SSS 也使用长度为 63 的 Zadoff-Chu 序列，加上边界额外预留的用作保护频段的 5 个子载波，形成了占据中心 72 个子载波（不包含 DC）的 SSS。从图 1 可以看出，无论是 FDD 还是 TDD，SSS 都在子帧 0 和 5 上传输。</p><p>LTE 中，SSS 的设计有其特别之处：<br>• 2 个 SSS（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow><mi>s</mi><mi>s</mi><mi>s</mi></mrow><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">{sss}_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">sss</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 位于子帧 0，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow><mi>s</mi><mi>s</mi><mi>s</mi></mrow><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">{sss}_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">sss</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 位于子帧 5）的值来源于 168 个可选值的集合，其对应 168 个不同的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>N</mi><mrow><mi>I</mi><mi>D</mi></mrow><mrow><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">N^{(2)}_{ID}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3383em;vertical-align:-0.2935em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4065em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">2</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2935em;"><span></span></span></span></span></span></span></span></span></span>。<br>• <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow><mi>s</mi><mi>s</mi><mi>s</mi></mrow><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">{sss}_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">sss</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的取值范围与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow><mi>s</mi><mi>s</mi><mi>s</mi></mrow><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">{sss}_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">sss</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是不同的，因此允许 UE 只接收一个 SSS 就检测出系统帧 10 ms 的 timing（即子帧 0 所在的位置）。这样做的原因在于，小区搜索过程中，UE 会搜索多个小区，搜索的时间窗可能不足以让 UE 检测超过一个 SSS。</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow><mi>s</mi><mi>s</mi><mi>s</mi></mrow><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">{sss}_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">sss</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是由 2 个长度为 31 的 m-sequence X 和 Y 交织而成的，每个都可以取 31 个不同的值（实际上是同一 m-sequences 的 31 种不同的偏移）。在同一个小区中， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow><mi>s</mi><mi>s</mi><mi>s</mi></mrow><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">{sss}_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">sss</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow><mi>s</mi><mi>s</mi><mi>s</mi></mrow><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">{sss}_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">sss</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 使用的是相同的 2 个 m-sequence，不同的是，前者的2 个 sequence（X 和 Y）在频域上交换了一下位置，从而保证了它们 属于不同的集合。<br><img src="https://cdn.jsdelivr.net/gh/yohakuo/CDN/img/202404241013632.png" alt="800"></p><ul><li><p>步骤一<br>UE 知道 PSS 后，就知道了 SSS 可能的位置。</p><p>首先，UE 在检测到 SSS 之前，还不知道该小区是工作在 FDD 还是 TDD 模式下。如果 UE 同时支持 FDD 和 TDD，则会在 2 个可能的位置上（见图 1.1）去尝试解码 SSS。如果在 PSS 的前一个 symbol 上检测到 SSS，则小区工作在 FDD 模式下；如果在 PSS 的前 3 个 symbol 上检测到 SSS，则小区工作在 TDD 模式下。如果 UE 只支持 FDD 或 TDD，则只会在相应的位置上去检测 SSS，如果检测不到，则认为不能接入该小区。（通过检测 SSS，UE 知道小区是工作在 FDD 模式还是 TDD 模式下）</p><p>其次，SSS 的确切位置还和 CP（Cyclic Prefix）的长度有关（如图 1.4、图 1.5 所示）。在此阶段，UE 还不知道小区的 CP 配置（Normal CP 还是 Extended CP），因此会在这两个可能的位置去盲检 SSS。（通过检测 SSS，UE 知道小区的 CP 配置）</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/yohakuo/CDN/img/202404241016335.png" alt="image.png|500"><br><img src="https://cdn.jsdelivr.net/gh/yohakuo/CDN/img/202404241016949.png" alt="image.png|500"></p><ul><li><p>步骤二<br>UE 会在 SSS 可能出现的位置（如果 UE 同时支持 FDD 和 TDD，则至多有 4 个位置），根据公式、表中可能出现的 168 种取值、以及 X 与 Y 交织的顺序（以便确定是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow><mi>s</mi><mi>s</mi><mi>s</mi></mrow><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">{sss}_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">sss</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 还是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow><mi>s</mi><mi>s</mi><mi>s</mi></mrow><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">{sss}_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">sss</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ）等，盲检 SSS。</p><p>如果成功解码出 SSS，就确定了 168 种取值之一，也就确定了 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>N</mi><mrow><mi>I</mi><mi>D</mi></mrow><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">N^{(1)}_{ID}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3383em;vertical-align:-0.2935em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4065em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2935em;"><span></span></span></span></span></span></span></span></span></span>。确定了 SSS 是  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow><mi>s</mi><mi>s</mi><mi>s</mi></mrow><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">{sss}_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">sss</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 还是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow><mi>s</mi><mi>s</mi><mi>s</mi></mrow><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">{sss}_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">sss</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，也就确定了该 SSS 是位于子帧 0 还是子帧 5，进而也就确定了该系统帧中子帧 0 所在的位置，即 10 ms timing。</p></li></ul><h3 id="多天线传输中的PSS和SSS"><strong>多天线传输中的PSS和SSS</strong></h3><p>在多天线传输的情况下，同一子帧内，PSS 和 SSS 总是在相同的天线端口上发射，而在不同的子帧上，则可以利用多天线增益，在不同的天线端口上发射。</p><h2 id="初始同步与邻居小区识别"><strong>初始同步与邻居小区识别</strong></h2><p>如果是初始同步（此时 UE 还没有驻留或连接到一个 LTE 小区），在检测完同步信号之后，UE 会解码 PBCH，以获取最重要的系统信息。</p><p>如果是识别邻居小区，UE 并不需要解码 PBCH，而只需要基于最新检测到的小区参考信号来测量下行信号质量水平，以决定是进行小区重选，还是 handover（此时 UE 会通过 RSRP 将这些测量结果上报给服务小区，决定是否进行 handover）。</p><p><img src="https://cdn.jsdelivr.net/gh/yohakuo/CDN/img/202404241022127.png" alt="image.png|420"></p><p>在 LTE 网络规划中，需要避免相邻小区的“PCI mod 3”、“PCI mod 6”、“PCI mod 30”的值相等。即所谓的避免“模 3 干扰”、“模 6 干扰”、“模 30 干扰”。</p><ul><li>模 3 干扰：如果相邻小区的 PCI mod 3 的值相同，那么相邻小区的 PSS 相同，就会造成 PSS 的相互干扰。</li><li>模 6 干扰：在时域位置固定的情况下，下行小区特定的参考信号在频域有 6 个频率移位。如果相邻小区的 PCI mod 6 值相同，那么下行小区特定的参考信号在频域上的位置会重叠，就会造成参考信号间的相互干扰。</li><li>模 30 干扰：在 PUSCH 信道中携带了 DM-RS 和 SRS 信息，这两个参考信号对于信道估计和解调非常重要。它们是由 30 组基本的 ZC 序列构成，即有 30 组不同的序列组合。如果相邻小区的 PCI mod 30 值相同，则会使用相同的 ZC 序列，就会造成上行 DM-RS 和 SRS 的相互干扰。</li></ul><h2 id="涉及的英文全称及解释">涉及的英文全称及解释</h2><ul><li><p>5G NR（New Radio）<br>5G NR 是第三代合作伙伴计划（3 GPP）为满足国际电信联盟（ITU）对 IMT-2020 的要求而设计的第一代 5 G 标准，它旨在通过提供更高的数据传输速率、更低的延迟和更大的连接密度来满足未来通信的需求。</p></li><li><p>UE（User Equpment）<br>用户设备，指移动通信网络中的移动终端设备。</p></li><li><p>LTE（Long Term Evolution）<br>LTE 是一种无线通信技术标准，用于数据和话音通信。在小区搜索的上下文中，LET 涉及到终端设备如何获取与小区的时间和频率同步，并检测该小区的物理层小区 ID 的过程。</p><p>LTE 作为向 4 G 过渡的标准，它代表了从 3 G 到 4 G 技术演进的一个重要步骤。</p><p>随着 5 G 技术的发展，LTE 也逐渐与 5 G NR 技术结合，形成了所谓的 LTE-NR 双连接模式，以提高网络的性能和覆盖范围。</p></li><li><p><strong>RRC</strong> - Radio Resource control<br>无线资源控制，是3GPP移动通信标准中的一个重要协议层，负责无线链路的控制。</p></li><li><p><strong>RRC_CONNECTED</strong><br>这是RRC的一个状态，表示UE已经与网络建立了连接。</p></li><li><p><strong>RRC_IDLE</strong><br>同样是RRC的一个状态，表示UE未与网络建立连接，处于空闲状态。</p></li><li><p>2个下行同步信号</p><ul><li><p><strong>PSS（Primary Synchronization Signal）</strong><br>主同步信号。<br>它是用于帮助UE确定小区的半帧定时位置和扇区号。<br>PSS的设计旨在通过特定的序列结构，使UE能够在复杂的无线环境中准确地检测到该信号，从而获取必要的同步信息。</p></li><li><p><strong>SSS（Secondary Synchronization Signal）</strong><br>辅同步信号。<br>SSS用于进一步帮助UE确定小区组号，进而确定具体的小区号2。<br>与PSS相比，SSS提供了更细粒度的同步信息，有助于UE在多个小区中准确地定位到目标小区。</p></li></ul></li><li><p>PCI（Physical-layer Cell Identity）<br>物理层小区身份，主要用于在异构和小型蜂窝网络中标识不同的物理小区，以实现有效的网络管理和通信。</p></li><li><p>两种不同的通信模式</p><ul><li>TDD（Time Division Duplex，时分双工）<ul><li>通过在不同时间段传输和接收信号来实现双向通信。</li></ul></li><li>FDD（Frequency Division Duplex，频分双工）<ul><li>使用两个不同的频率来实现双向通信。</li></ul></li></ul></li><li><p><strong>DC</strong> - Direct Current<br>或者在通信领域中指 Downlink Component，即下行分量。</p></li><li><p><strong>RB</strong> - Resource block<br>资源块，LTE网络中用于传输数据的基本频域单位。</p></li><li><p><strong>m-sequence</strong> - Maximum Length sequenceDiagram<br>最长序列，一种伪随机二进制序列。</p></li><li><p><strong>Zadoff-Chu序列</strong><br>一种具有良好自相关特性的序列，常用于通信系统的同步过程。</p></li><li><p><strong>CP</strong> - Cyclic Prefix<br>循环前缀，LTE中用于减少多径效应影响的技术。</p></li><li><p><strong>RSRP</strong> - Reference Signal Received Power<br>参考信号接收功率，用于测量信号质量。</p></li><li><p><strong>PBCH</strong> - Physical Broadcast Channel<br>物理广播信道，用于传输重要的系统信息。</p></li><li><p><strong>3GPP</strong> - The 3rd Generation Partnership project<br>第三代合作伙伴计划，一个国际标准化组织，负责制定全球移动通信的技术标准。</p></li><li><p><strong>TS</strong> - Technical Specification<br>技术规范，3GPP标准文档的一种形式。</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>信息</category>
      
    </categories>
    
    
    <tags>
      
      <tag>cell-search</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>proxy相关知识</title>
    <link href="/2024/04/23/proxy%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/"/>
    <url>/2024/04/23/proxy%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/</url>
    
    <content type="html"><![CDATA[<h1>相关知识</h1><h2 id="GFS-Great-Firewall">GFS (Great Firewall)</h2><blockquote><p><a href="https://zh.wikipedia.org/wiki/%E9%98%B2%E7%81%AB%E9%95%BF%E5%9F%8E#cite_note-rfa1204-1">防火长城</a>，也称<a href="https://zh.wikipedia.org/wiki/%E9%98%B2%E7%81%AB%E9%95%BF%E5%9F%8E#cite_note-cnii-2">中国国家防火墙</a>，或简称为<strong>墙</strong>、<strong>防火墙</strong></p></blockquote><p>GFW本质上是巨大的高性能分布式入侵检测维稳系统并不是单纯的防火墙</p><p><img src="https://camo.githubusercontent.com/49125c8f072841e6ee2b397f44fd224874bce2592208027afa1532b3eddfafcd/68747470733a2f2f692e706f7374696d672e63632f514e7178517937742f323031382d30352d32332d3231303033352e706e67" alt=""></p><h2 id="TCP-IP协议拓扑图">TCP/IP协议拓扑图</h2><p><img src="https://camo.githubusercontent.com/80d5e5494d69a8a44238d86cb949cbc2022d6dfee5b82d46409ad1404554298d/68747470733a2f2f692e706f7374696d672e63632f526842387431726a2f3137313635313532353634323838382e706e67" alt=""></p><h3 id="软件使用网络协议取向-：">软件使用网络协议取向 ：</h3><ul><li>客户端间歇性的发起无状态的查询且允许发生延迟，使用http/https，如：浏览器</li><li>客户端和服务器都可独立发包的情况下：<ul><li>可容忍延迟但对数据来说一个字节都不能改变，使用tcp，如：在线斗地主</li><li>有实时性要求，准许部分字节错误，但不能容忍延迟，使用udp，如：即时动作类游戏</li></ul></li></ul><p>VPN能连接TCP与UDP协议，是因为虚拟网卡以及其生成的IP比TCP与UDP更为底层；sock处于OSI模型中的会话层，负责在数据传输中设置和维护电脑网络中两台电脑之间的通信连接，并不关心是何种应用协议，以至于sock代理不能互联用于其他协议的软件。典型的例子：v2ray需要switchyomega在表示层做中继代理打开被封锁的站点.</p><h1>域名劫持与污染</h1><h2 id="DNS（域名系统）">DNS（域名系统）</h2><p>域名是互联网上某一台计算机或计算机组的名称，由一串用点分隔的名字组成，用于在数据传输时标识计算机的电子方位。<br>如，Google的域名是&quot;<a href="http://google.com">google.com</a>&quot;</p><p>DNS（Domain Name System 或Domain Name Service）是因特网的一项核心服务，它将人类可读的域名与机器可读的IP地址相互映射，使得用户能够通过易于记忆的域名访问互联网上的资源，而不需要记住复杂的IP地址。<br>如，当输入“<code>www.example.com</code>”时，DNS会将这个域名解析为对应的IP地址（如192.168.1.1），以便浏览器可以加载网页</p><h2 id="DNS劫持">DNS劫持</h2><p>通过劫持DNS服务器，通过某些手段取得某域名的解析记录控制权，进而修改此域名的解析结果，导致对该域名的访问由原IP地址转入到修改后的指定IP，其结果就是对特定的网址不能访问或访问的是假网址，从而实现窃取资料或者破坏原有正常服务的目的。</p><h2 id="DNS污染">DNS污染</h2><p>通常的DNS查询没有任何认证机制，而且DNS查询通常基于的UDP是无连接不可靠的协议，非常容易被篡改，通过对UDP端口53上的DNS查询进行入侵检测，GFW发现与关键词相匹配的请求则立即伪装成目标域名的解析服务器给查询者返回虚假结果。</p><p>因此也被称为DNS欺骗或叫投毒。由于巨量的IP请求被GFW的DNS污染分别指向各个不同IP让其各项资源快速耗尽，导致正常用户无法访问，致使部分网站屏蔽中国IP而防止这种DDoS攻击。</p><h2 id="Host">Host</h2><p>Hosts是负责将主机名映射到相应的IP地址的文件，通常用于补充或取代网络中DNS的功能；与DNS不同，计算机的用户可以直接对hosts文件进行控制指定IP访问的网址。</p><p>Hosts文件本来是用来提高解析效率的。在进行DNS请求以前，系统会先检查自己的Hosts文件中是否有这个地址映射关系，如果有则调用这个IP地址映射，如果没有再向已知的DNS服务器提出域名解析。也就是说Hosts的请求级别比DNS高。当你的Hosts文件里面有对应的IP时，它就会直接访问那个IP，而不用通过DNS。</p><p>所以，当我们直接将SS分享之类的站点IP放入Hosts文件后，就可以跳过DNS的解析这一步直接就行，IP访问不受GFW的DNS污染干扰了，但封IP那就没辙了；如果是<a href="https://baike.baidu.com/item/CDN">CDN</a> 的IP被封的话，则需要站点站长提供主IP地址，也可以说是真实IP添加进hosts即可。</p><h1>科学上网原理</h1><h2 id="背景">背景</h2><p>在很久很久以前，我们访问各种网站都是简单而直接的，用户的请求通过互联网发送到服务提供方，服务提供方直接将信息反馈给用户。<br><img src="https://camo.githubusercontent.com/e9c52276508c4af50b520d0e8de98ca3134713df2e175e2f07eac4139dac914e/68747470733a2f2f692e706f7374696d672e63632f4b6a3062667044362f77686174732d736861646f77736f636b732d30312e706e67" alt=""></p><p>后来，<a href="https://zh.wikipedia.org/wiki/%E9%98%B2%E7%81%AB%E9%95%BF%E5%9F%8E">GFW</a> 就出现了，他像一个收过路费的强盗一样夹在了在用户和服务之间，每当用户需要获取信息，都经过了 GFW，GFW将它不喜欢的内容统统过滤掉，于是客户当触发 GFW 的过滤规则的时候，就会收到 <code>Connection Reset</code> 这样的响应内容，而无法接收到正常的内容。</p><p><img src="https://camo.githubusercontent.com/e8991b604dd024f9ba05c3a530e103243973d26bcb3202d17835793740edb73f/68747470733a2f2f692e706f7374696d672e63632f676353314d6857622f77686174732d736861646f77736f636b732d30322e706e67" alt=""></p><p>聪明的人们想到了利用境外服务器代理的方法来绕过 GFW 的过滤，其中包含了各种HTTP代理服务、Socks服务、VPN服务等。</p><h2 id="shadowsocks">shadowsocks</h2><p>简单理解的话，shadowsocks 是将原来 ssh 创建的 Socks5 协议拆开成 server 端和 client 端，所以下面这个原理图基本上和利用 ssh tunnel 大致类似。<br><img src="https://camo.githubusercontent.com/852c1d6f6ba6cdd5016558169ece90e6020fd3d0914abf7a4c5875213835f84c/68747470733a2f2f692e706f7374696d672e63632f394d574642396a712f77686174732d736861646f77736f636b732d30342e706e67" alt=""></p><ul><li>1、6) 客户端发出的请求基于 Socks5 协议跟 ss-local 端进行通讯，由于这个 ss-local 一般是本机或路由器或局域网的其他机器，不经过 GFW，所以解决了上面被 GFW 通过特征分析进行干扰的问题</li><li>2、5) ss-local 和 ss-server 两端通过多种可选的加密方法进行通讯，经过 GFW 的时候是常规的TCP包，没有明显的特征码而且 GFW 也无法对通讯数据进行解密</li><li>3、4) ss-server 将收到的加密数据进行解密，还原原来的请求，再发送到用户需要访问的服务，获取响应原路返回</li></ul><h2 id="PAC">PAC</h2><p><code>代理自动配置（Proxy auto-config，简称PAC）</code> 是一种网页浏览器技术，用于定义浏览器该如何自动选择适当的代理服务器来访问一个网址。<br><img src="https://camo.githubusercontent.com/180f5977b7c44a7a11b30b573407651577fa78af4b03963aafe0c968be595615/68747470733a2f2f692e706f7374696d672e63632f4d486753674d67352f794576753261462e706e67" alt=""><br>简单的讲，PAC就是一种配置，它能让你的浏览器智能判断哪些网站走代理，哪些不需要走代理。点击 Shadowsocks 的菜单，选择 <code>编辑自动模式的 PAC</code>，如下图</p><h2 id="Socks代理和http代理的区别">Socks代理和http代理的区别</h2><p><strong>Socks代理</strong><br>SOCKS代理在任何情况下都不会中断server与client之间的数据（这是由这种协议的特性决定的，毕竟非明文，但是在SOCKS代理服务器上还是可以还原出TCP和UDP的原始流量的），当你的防火墙不允许你上网的时候，你就可以通过SOCKS代理来上网（这里的意思是，如果GFW把google屏蔽了，你就可以通过一台海外的SOCKS代理服务器上谷歌）。</p><p>从定义上来看，SOCKS代理是一种通用的代理服务器，它基于SOCKS协议，能够处理多种类型的网络流量，包括但不限于HTTP请求。</p><p>在应用场景上，SOCKS代理因其通用性和灵活性，适用于各种应用程序的代理设置，可以处理不同协议的网络流量。这意味着SOCKS代理可以为更广泛范围的互联网服务提供代理，而不仅仅是网页浏览。</p><p>在性能方面，由于SOCKS代理不关心数据包的具体内容，因此它的速度通常比专门处理HTTP流量的HTTP代理要快得多。此外，SOCKS代理支持TCP和UDP连接，这使得它能够代理FTP、SMTP等多种流量，而不仅仅是HTTP流量。</p><p>而SOCKS代理虽然无法处理标准隧道加密，但它的通用性和灵活性使其在某些情况下可能更适合用于访问防火墙后的目标。</p><p>Socks代理的端口通常是1080。</p><p><strong>HTTP代理</strong></p><p>HTTP代理跟上面原理类似，用处也基本相同，都是让处于防火墙下的主机与外界建立连接，但是它与SOCKS代理不同的是，HTTP代理可以中断连接（即在中间截断数据流），因为HTTP代理是以HTTP请求为基础的而这些请求大多以明文形式存在，所以HTTP代理可以在Client和下游服务器中间窃听，修改数据。</p><p>（我来举个栗子：假如你的HTTP代理是Goagent，监听本地127.0.0.1:8080，此刻假设你已经把浏览器 的代理设置为：127.0.0.1:8080，那么你在浏览器中，所有的POST，GET，以及其他的请求，都会通过本地的代理转发给远程的服务器，然后再通过远程的服务器去请求你所请求的这些资源，大家知道，HTTP协议是通过明文传输的，无论是在本地还是远程的服务器上，都是可以监听到这些流量的，所以才会有GFW的存在……HTTP协议属于应用层，而SOCKS协议属于<strong>传输层</strong>，ps：传输层在网络层之下，这就决定了两者的能力大小。）</p><h1>V2rayN 设置</h1><h2 id="基础设置">基础设置</h2><ul><li>其他设备共享代理</li></ul><blockquote><p>前提是两个设备在同一个局域网内</p></blockquote><p>打开设置-参数设置-允许来自局域网的连接<br>在 cmd 中 <code>ipconfig</code> 查询本机 ip<br>配置手机中的某个网络的代理-输入服务器主机名，服务器端口（在 V2 客户端显示了）</p><ul><li>为局域网开启新的端口</li></ul><blockquote><p>可以配置端口，用户名密码</p></blockquote><h2 id="v2rayN设置">v2rayN设置</h2><ul><li>启用安全协议TLS v1.3（订阅/检查更新）<ul><li>它可以提供更快的连接速度和更高的安全性。相比TLS v1.2，TLS v1.3的握手时间减半，这意味着访问一个移动端网站，使用TLS v1.3协议，可能会减少将近100ms的时间。此外，TLS v1.3还提供了更好的安全性，包括更强的加密算法和更好的前向保密性，这可以保护您的数据免受黑客和其他恶意用户的攻击。</li></ul></li><li>检查Pre-Release更新(请谨慎启用)<ul><li>启用后可以把v2rayN更新到Pre-Release（预发布版）</li></ul></li><li>主界面双击设为活动服务器<ul><li>启用后切换节点更加方便</li></ul></li><li>启用硬件加速(需重启)：<ul><li>意味着v2rayN可以利用计算机的硬件资源来提高代理效率，可以使v2rayN在处理数据时更快，从而提高代理速度和稳定性。硬件加速还可以减少CPU的负载，从而降低计算机的能耗。如果您的计算机配置较高，启用硬件加速可以获得更好的代理体验。</li></ul></li></ul><h2 id="Tun模式设置">Tun模式设置</h2><ul><li>==system==是指系统代理的设置。当你使用v2ray tun模式时，你可以选择将系统代理设置为v2ray，这样所有的网络流量都会通过v2ray进行代理；</li><li>==gvisor==是一个用于提供更高级的网络隔离和安全性的工具。它是一个开源的沙箱工具，可以在操作系统级别实现容器化，以保护应用程序免受恶意代码的攻击。使用gvisor可以增加网络应用程序的安全性，防止恶意代码对系统的攻击和滥用。</li></ul><h2 id="路由设置">路由设置</h2><ul><li><p>域名解析策略</p><ul><li>==AsIs==：只使用域名进行路由选择。快速解析，不精确分流。默认值。</li><li>==IPIfNonMatch==：当域名没有匹配任何规则时，将域名解析成 IP（A 记录或 AAAA 记录）再次进行匹配；<br>当一个域名有多个 A 记录时，会尝试匹配所有的 A 记录，直到其中一个与某个规则匹配为止；<br>解析后的 IP 仅在路由选择时起作用，转发的数据包中依然使用原始域名；<br>理论上解析比”AsIs”稍慢，但使用中通常不会觉察到。</li><li>==IPOnDemand==：当匹配时碰到任何基于 IP 的规则，将域名立即解析为 IP 进行匹配。解析最精确，也最慢。</li></ul></li><li><p>域名匹配算法</p><ul><li>==linear==：使用线性匹配算法，默认值；</li><li>==mph==：使用最小完美散列（minimal perfect hash）算法（v4.36.1+）。测试数据约 17 万条，匹配速度提升约 30%，内存占用减少约 15%。</li></ul></li></ul><h2 id="解除win10-uwp应用回环代理限制">解除win10 uwp应用回环代理限制</h2><ul><li>可以使Win10/Win11 应用（比如 Microsoft Store）走系统代理</li></ul><h1>来源</h1><ul><li><a href="https://github.com/hoochanlon/fq-book/blob/master/docs/_sidebar.md">github库</a></li><li><a href="https://naiyous.com/3717.html">一个文档</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>信息</category>
      
    </categories>
    
    
    <tags>
      
      <tag>read</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>代理相关知识</title>
    <link href="/2024/04/23/%E4%BA%86%E8%A7%A3%E4%BB%A3%E7%90%86%E7%9B%B8%E5%85%B3/"/>
    <url>/2024/04/23/%E4%BA%86%E8%A7%A3%E4%BB%A3%E7%90%86%E7%9B%B8%E5%85%B3/</url>
    
    <content type="html"><![CDATA[<h1>相关知识</h1><h2 id="GFS-Great-Firewall">GFS (Great Firewall)</h2><blockquote><p><a href="https://zh.wikipedia.org/wiki/%E9%98%B2%E7%81%AB%E9%95%BF%E5%9F%8E#cite_note-rfa1204-1">防火长城</a>，也称<a href="https://zh.wikipedia.org/wiki/%E9%98%B2%E7%81%AB%E9%95%BF%E5%9F%8E#cite_note-cnii-2">中国国家防火墙</a>，或简称为<strong>墙</strong>、<strong>防火墙</strong></p></blockquote><p>GFW本质上是巨大的高性能分布式入侵检测维稳系统并不是单纯的防火墙</p><p><img src="https://camo.githubusercontent.com/49125c8f072841e6ee2b397f44fd224874bce2592208027afa1532b3eddfafcd/68747470733a2f2f692e706f7374696d672e63632f514e7178517937742f323031382d30352d32332d3231303033352e706e67" alt=""></p><h2 id="TCP-IP协议拓扑图">TCP/IP协议拓扑图</h2><p><img src="https://camo.githubusercontent.com/80d5e5494d69a8a44238d86cb949cbc2022d6dfee5b82d46409ad1404554298d/68747470733a2f2f692e706f7374696d672e63632f526842387431726a2f3137313635313532353634323838382e706e67" alt=""></p><h3 id="软件使用网络协议取向-：">软件使用网络协议取向 ：</h3><ul><li>客户端间歇性的发起无状态的查询且允许发生延迟，使用http/https，如：浏览器</li><li>客户端和服务器都可独立发包的情况下：<ul><li>可容忍延迟但对数据来说一个字节都不能改变，使用tcp，如：在线斗地主</li><li>有实时性要求，准许部分字节错误，但不能容忍延迟，使用udp，如：即时动作类游戏</li></ul></li></ul><p>VPN能连接TCP与UDP协议，是因为虚拟网卡以及其生成的IP比TCP与UDP更为底层；sock处于OSI模型中的会话层，负责在数据传输中设置和维护电脑网络中两台电脑之间的通信连接，并不关心是何种应用协议，以至于sock代理不能互联用于其他协议的软件。典型的例子：v2ray需要switchyomega在表示层做中继代理打开被封锁的站点.</p><h1>域名劫持与污染</h1><h2 id="DNS（域名系统）">DNS（域名系统）</h2><p>域名是互联网上某一台计算机或计算机组的名称，由一串用点分隔的名字组成，用于在数据传输时标识计算机的电子方位。<br>如，Google的域名是&quot;<a href="http://google.com">google.com</a>&quot;</p><p>DNS（Domain Name System 或Domain Name Service）是因特网的一项核心服务，它将人类可读的域名与机器可读的IP地址相互映射，使得用户能够通过易于记忆的域名访问互联网上的资源，而不需要记住复杂的IP地址。<br>如，当输入“<code>www.example.com</code>”时，DNS会将这个域名解析为对应的IP地址（如192.168.1.1），以便浏览器可以加载网页</p><h2 id="DNS劫持">DNS劫持</h2><p>通过劫持DNS服务器，通过某些手段取得某域名的解析记录控制权，进而修改此域名的解析结果，导致对该域名的访问由原IP地址转入到修改后的指定IP，其结果就是对特定的网址不能访问或访问的是假网址，从而实现窃取资料或者破坏原有正常服务的目的。</p><h2 id="DNS污染">DNS污染</h2><p>通常的DNS查询没有任何认证机制，而且DNS查询通常基于的UDP是无连接不可靠的协议，非常容易被篡改，通过对UDP端口53上的DNS查询进行入侵检测，GFW发现与关键词相匹配的请求则立即伪装成目标域名的解析服务器给查询者返回虚假结果。</p><p>因此也被称为DNS欺骗或叫投毒。由于巨量的IP请求被GFW的DNS污染分别指向各个不同IP让其各项资源快速耗尽，导致正常用户无法访问，致使部分网站屏蔽中国IP而防止这种DDoS攻击。</p><h2 id="Host">Host</h2><p>Hosts是负责将主机名映射到相应的IP地址的文件，通常用于补充或取代网络中DNS的功能；与DNS不同，计算机的用户可以直接对hosts文件进行控制指定IP访问的网址。</p><p>Hosts文件本来是用来提高解析效率的。在进行DNS请求以前，系统会先检查自己的Hosts文件中是否有这个地址映射关系，如果有则调用这个IP地址映射，如果没有再向已知的DNS服务器提出域名解析。也就是说Hosts的请求级别比DNS高。当你的Hosts文件里面有对应的IP时，它就会直接访问那个IP，而不用通过DNS。</p><p>所以，当我们直接将SS分享之类的站点IP放入Hosts文件后，就可以跳过DNS的解析这一步直接就行，IP访问不受GFW的DNS污染干扰了，但封IP那就没辙了；如果是<a href="https://baike.baidu.com/item/CDN">CDN</a> 的IP被封的话，则需要站点站长提供主IP地址，也可以说是真实IP添加进hosts即可。</p><h1>科学上网原理</h1><h2 id="背景">背景</h2><p>在很久很久以前，我们访问各种网站都是简单而直接的，用户的请求通过互联网发送到服务提供方，服务提供方直接将信息反馈给用户。<br><img src="https://camo.githubusercontent.com/e9c52276508c4af50b520d0e8de98ca3134713df2e175e2f07eac4139dac914e/68747470733a2f2f692e706f7374696d672e63632f4b6a3062667044362f77686174732d736861646f77736f636b732d30312e706e67" alt=""></p><p>后来，<a href="https://zh.wikipedia.org/wiki/%E9%98%B2%E7%81%AB%E9%95%BF%E5%9F%8E">GFW</a> 就出现了，他像一个收过路费的强盗一样夹在了在用户和服务之间，每当用户需要获取信息，都经过了 GFW，GFW将它不喜欢的内容统统过滤掉，于是客户当触发 GFW 的过滤规则的时候，就会收到 <code>Connection Reset</code> 这样的响应内容，而无法接收到正常的内容。</p><p><img src="https://camo.githubusercontent.com/e8991b604dd024f9ba05c3a530e103243973d26bcb3202d17835793740edb73f/68747470733a2f2f692e706f7374696d672e63632f676353314d6857622f77686174732d736861646f77736f636b732d30322e706e67" alt=""></p><p>聪明的人们想到了利用境外服务器代理的方法来绕过 GFW 的过滤，其中包含了各种HTTP代理服务、Socks服务、VPN服务等。</p><h2 id="shadowsocks">shadowsocks</h2><p>简单理解的话，shadowsocks 是将原来 ssh 创建的 Socks5 协议拆开成 server 端和 client 端，所以下面这个原理图基本上和利用 ssh tunnel 大致类似。<br><img src="https://camo.githubusercontent.com/852c1d6f6ba6cdd5016558169ece90e6020fd3d0914abf7a4c5875213835f84c/68747470733a2f2f692e706f7374696d672e63632f394d574642396a712f77686174732d736861646f77736f636b732d30342e706e67" alt=""></p><ul><li>1、6) 客户端发出的请求基于 Socks5 协议跟 ss-local 端进行通讯，由于这个 ss-local 一般是本机或路由器或局域网的其他机器，不经过 GFW，所以解决了上面被 GFW 通过特征分析进行干扰的问题</li><li>2、5) ss-local 和 ss-server 两端通过多种可选的加密方法进行通讯，经过 GFW 的时候是常规的TCP包，没有明显的特征码而且 GFW 也无法对通讯数据进行解密</li><li>3、4) ss-server 将收到的加密数据进行解密，还原原来的请求，再发送到用户需要访问的服务，获取响应原路返回</li></ul><h2 id="PAC">PAC</h2><p><code>代理自动配置（Proxy auto-config，简称PAC）</code> 是一种网页浏览器技术，用于定义浏览器该如何自动选择适当的代理服务器来访问一个网址。<br><img src="https://camo.githubusercontent.com/180f5977b7c44a7a11b30b573407651577fa78af4b03963aafe0c968be595615/68747470733a2f2f692e706f7374696d672e63632f4d486753674d67352f794576753261462e706e67" alt=""><br>简单的讲，PAC就是一种配置，它能让你的浏览器智能判断哪些网站走代理，哪些不需要走代理。点击 Shadowsocks 的菜单，选择 <code>编辑自动模式的 PAC</code>，如下图</p><h2 id="Socks代理和http代理的区别">Socks代理和http代理的区别</h2><p><strong>Socks代理</strong><br>SOCKS代理在任何情况下都不会中断server与client之间的数据（这是由这种协议的特性决定的，毕竟非明文，但是在SOCKS代理服务器上还是可以还原出TCP和UDP的原始流量的），当你的防火墙不允许你上网的时候，你就可以通过SOCKS代理来上网（这里的意思是，如果GFW把google屏蔽了，你就可以通过一台海外的SOCKS代理服务器上谷歌）。</p><p>从定义上来看，SOCKS代理是一种通用的代理服务器，它基于SOCKS协议，能够处理多种类型的网络流量，包括但不限于HTTP请求。</p><p>在应用场景上，SOCKS代理因其通用性和灵活性，适用于各种应用程序的代理设置，可以处理不同协议的网络流量。这意味着SOCKS代理可以为更广泛范围的互联网服务提供代理，而不仅仅是网页浏览。</p><p>在性能方面，由于SOCKS代理不关心数据包的具体内容，因此它的速度通常比专门处理HTTP流量的HTTP代理要快得多。此外，SOCKS代理支持TCP和UDP连接，这使得它能够代理FTP、SMTP等多种流量，而不仅仅是HTTP流量。</p><p>而SOCKS代理虽然无法处理标准隧道加密，但它的通用性和灵活性使其在某些情况下可能更适合用于访问防火墙后的目标。</p><p>Socks代理的端口通常是1080。</p><p><strong>HTTP代理</strong></p><p>HTTP代理跟上面原理类似，用处也基本相同，都是让处于防火墙下的主机与外界建立连接，但是它与SOCKS代理不同的是，HTTP代理可以中断连接（即在中间截断数据流），因为HTTP代理是以HTTP请求为基础的而这些请求大多以明文形式存在，所以HTTP代理可以在Client和下游服务器中间窃听，修改数据。</p><p>（我来举个栗子：假如你的HTTP代理是Goagent，监听本地127.0.0.1:8080，此刻假设你已经把浏览器 的代理设置为：127.0.0.1:8080，那么你在浏览器中，所有的POST，GET，以及其他的请求，都会通过本地的代理转发给远程的服务器，然后再通过远程的服务器去请求你所请求的这些资源，大家知道，HTTP协议是通过明文传输的，无论是在本地还是远程的服务器上，都是可以监听到这些流量的，所以才会有GFW的存在……HTTP协议属于应用层，而SOCKS协议属于<strong>传输层</strong>，ps：传输层在网络层之下，这就决定了两者的能力大小。）</p><h1>V2rayN 设置</h1><h2 id="基础设置">基础设置</h2><ul><li>其他设备共享代理</li></ul><blockquote><p>前提是两个设备在同一个局域网内</p></blockquote><p>打开设置-参数设置-允许来自局域网的连接<br>在 cmd 中 <code>ipconfig</code> 查询本机 ip<br>配置手机中的某个网络的代理-输入服务器主机名，服务器端口（在 V2 客户端显示了）</p><ul><li>为局域网开启新的端口</li></ul><blockquote><p>可以配置端口，用户名密码</p></blockquote><h2 id="v2rayN设置">v2rayN设置</h2><ul><li>启用安全协议TLS v1.3（订阅/检查更新）<ul><li>它可以提供更快的连接速度和更高的安全性。相比TLS v1.2，TLS v1.3的握手时间减半，这意味着访问一个移动端网站，使用TLS v1.3协议，可能会减少将近100ms的时间。此外，TLS v1.3还提供了更好的安全性，包括更强的加密算法和更好的前向保密性，这可以保护您的数据免受黑客和其他恶意用户的攻击。</li></ul></li><li>检查Pre-Release更新(请谨慎启用)<ul><li>启用后可以把v2rayN更新到Pre-Release（预发布版）</li></ul></li><li>主界面双击设为活动服务器<ul><li>启用后切换节点更加方便</li></ul></li><li>启用硬件加速(需重启)：<ul><li>意味着v2rayN可以利用计算机的硬件资源来提高代理效率，可以使v2rayN在处理数据时更快，从而提高代理速度和稳定性。硬件加速还可以减少CPU的负载，从而降低计算机的能耗。如果您的计算机配置较高，启用硬件加速可以获得更好的代理体验。</li></ul></li></ul><h2 id="Tun模式设置">Tun模式设置</h2><ul><li>==system==是指系统代理的设置。当你使用v2ray tun模式时，你可以选择将系统代理设置为v2ray，这样所有的网络流量都会通过v2ray进行代理；</li><li>==gvisor==是一个用于提供更高级的网络隔离和安全性的工具。它是一个开源的沙箱工具，可以在操作系统级别实现容器化，以保护应用程序免受恶意代码的攻击。使用gvisor可以增加网络应用程序的安全性，防止恶意代码对系统的攻击和滥用。</li></ul><h2 id="路由设置">路由设置</h2><ul><li><p>域名解析策略</p><ul><li>==AsIs==：只使用域名进行路由选择。快速解析，不精确分流。默认值。</li><li>==IPIfNonMatch==：当域名没有匹配任何规则时，将域名解析成 IP（A 记录或 AAAA 记录）再次进行匹配；<br>当一个域名有多个 A 记录时，会尝试匹配所有的 A 记录，直到其中一个与某个规则匹配为止；<br>解析后的 IP 仅在路由选择时起作用，转发的数据包中依然使用原始域名；<br>理论上解析比”AsIs”稍慢，但使用中通常不会觉察到。</li><li>==IPOnDemand==：当匹配时碰到任何基于 IP 的规则，将域名立即解析为 IP 进行匹配。解析最精确，也最慢。</li></ul></li><li><p>域名匹配算法</p><ul><li>==linear==：使用线性匹配算法，默认值；</li><li>==mph==：使用最小完美散列（minimal perfect hash）算法（v4.36.1+）。测试数据约 17 万条，匹配速度提升约 30%，内存占用减少约 15%。</li></ul></li></ul><h2 id="解除win10-uwp应用回环代理限制">解除win10 uwp应用回环代理限制</h2><ul><li>可以使Win10/Win11 应用（比如 Microsoft Store）走系统代理</li></ul><h1>来源</h1><ul><li><a href="https://github.com/hoochanlon/fq-book/blob/master/docs/_sidebar.md">github库</a></li><li><a href="https://naiyous.com/3717.html">一个文档</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>信息</category>
      
    </categories>
    
    
    <tags>
      
      <tag>read</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2024-W16</title>
    <link href="/2024/04/21/2024-W16/"/>
    <url>/2024/04/21/2024-W16/</url>
    
    <content type="html"><![CDATA[<p>本篇是对 <code>2024-04-15 </code> 到 <code> 2024-04-21</code> 这一周生活的记录与思考。</p><p>学高数的状态比上周好多了，英语单词方面因为只剩下一些没标熟的词需要复习所以很轻松，每日一句和阅读轮流做。<br>下周的目标是再多学一点高数和英语。</p><p>新增了散步的项目，每天增加一点运动量。</p><p>尝试新的时间记录软件，坚持记录！</p><h2 id="新增图床">新增图床</h2><p>用到 <a href="https://github.com/Molunerfinn/PicGo">PicGo</a> 这个软件加上 ob 里面刚好有对应的插件，配置简单方便！<br>参考的是 <a href="https://blog.luzy.top/posts/214001566/">这个方案</a>，大概是因为隔了很久，Coding 的配置里面没有看到DevOps项目，并且对应的插件也失效了，目前感觉这样也还行，就没再折腾</p><h2 id="记录如何阅读和做笔记">记录<a href="!--swig%EF%BF%BC0--">如何阅读和做笔记</a></h2><p>配置了 zotero 和 ob 的联动，使用还不是很熟悉</p><h2 id="代理相关知识"><a href="!--swig%EF%BF%BC1--">代理相关知识</a></h2><p>起因是图片上传图床失败了，配置了一下代理就好了，顺便再多看看</p><h2 id="一个交大学子在-23-年-1-月的经验分享">一个交大学子在 23 年 1 月的经验分享</h2><blockquote><p><a href="https://github.com/SurviveSJTU/SJTU-Application/blob/master/docs/grad-application/electronic-information-and-electrical-engineering/%5BCN%5D-16-Hecate2.md#%E6%88%98%E6%9C%AF%E4%B8%8A%E4%B8%BB%E6%97%A8%E6%98%AF%E5%9F%B9%E5%85%BB%E8%87%AA%E5%B7%B1%E5%AD%A6%E4%B9%A0%E6%96%B0%E7%9F%A5%E8%AF%86%E7%9A%84%E9%80%9F%E5%BA%A6">原文</a></p></blockquote><h3 id="战术上，主旨是培养自己学习新知识的速度。">战术上，主旨是培养自己学习新知识的速度。</h3><ul><li>熟练英语。要非常熟练。查字典的速度和直接读完的速度没法比。</li><li>熟练很多编程语言。高级语法应全部理解才算熟练。</li><li>熟练常见项目搭建环境，debug的工具、流程等。这会帮你迅速掌握新项目。</li><li>广泛了解各细分领域知识，包括但不限于代码本身。比如你要知道EDA，汽车电子，区块链，数控工控行业各需要哪些专属数学物理硬核知识，而不是只知道算法前端后端。更坏的情况是，你脑中ls整个目录的时候只找出前端后端这种狗都会的烂大街搬砖方向，那么你永远不会自己想到还有区块链这种东西。</li><li>不要看书，不要看视频，不要过度练习。太慢了！</li></ul><h3 id="问与答">问与答</h3><ul><li><p>绩点，英语，科研，或者工作技能，考研分数等方面，我最容易实现突破的是哪一项？<br>可能是英语（最近燃起了热情）</p></li><li><p>读国内的硕士/博士，主要是做些什么？有哪些风险？能为我的战略目标提供哪些价值？（当然，也可能毫无价值）<br>换个环境呆呆，刷刷世界观，以及有没有什么新机会。<br>风险的话，首先生活上可能不一定习惯，生病很麻烦，回家不方便。另外读研生活的不确定性还挺大的，大家分享的经验里，找个好老板挺关键，要是遇到… 或许不如不读。<br>无论如何，都会提升自己，客观上有学历的提升，更多的是自己的提升，包如何生活，如何适应新环境，还有如何完成考研这种长期规划坚持的项目。</p></li><li><p>读国外的硕士/博士，主要是做些什么？有哪些风险？能为我的战略目标提供哪些价值？<br>了解的不够多，大家普遍认为国外的学习环境更好，能学到更多。<br>对语言要求高，课业压力肯定不小，因为专业方面的书籍课程首先还需要克服语言障碍；生活成本更高，但质量不一定好。有的地区暴力事件还挺多，人身安全也得考虑。</p></li><li><p>本科毕业时工作，或者硕士/博士毕业时工作，甚至于本科直接退学去工作，甚至永远不工作，各有哪些价值和风险？<br>浅浅的思考一下。</p><p>先工作的优势在于，会积累更多实际经验，而大部分工作更喜欢找有经验的人而不是小白。但过早的开始工作是否会让人停止锻炼学习的能力呢？尤其是有些工作没有太多新事物，一旦学会了，学习就差不多结束了，而又没有时间精力去学其他新技能。这是否最后会让有经验的人成为只有某种经验的人呢？</p><p>接着学习理想情况是更加深入的学习某一方向的专业知识，培养技能，并且能不断保持学习。可是国内的教育和实际的工作还是脱轨的，这个世界既一成不变，又瞬息万变。也许等读完研，所处行业变得更加封闭和衰退了…</p></li><li><p>学习的广度和深度优先选哪个？<br>我目前偏向学习的广度（什么感兴趣就学什么 ），而在之前我非常渴望找到深度学习的方向，可惜失败了。</p></li><li><p>如何判断下一个风口？我应该在什么时机下决定突袭all in一个行业？（或者，永不all in任何行业也是有可能的）<br>我也想知道。</p></li><li><p>我需要以多快的速度完成从0到精通？为了达到这种速度，我应当做哪些准备？<br>正在尝试学英语，做好记录。<br>很惭愧，有些技能属于用着用着就精通了，没思考过如何快速精通某一技能。</p></li><li><p>对我来说，五险一金是税还是福利？<br>搜索的解释如下。</p><p>五险一金是由用人单位给予劳动者的，旨在保障职工权利。从这个角度来看，五险一金更倾向于被视为一种福利，因为它直接关联到提高员工的生活质量和保障其基本生活需求。</p><p>然而，也有观点认为五险一金具有较强的税收属性。<br>一些研究指出，五险一金并非一般意义上的福利范畴，而是根据税收相关理论及效应，具有一定的税收性质。这种观点认为，五险一金在一定程度上类似于国际上通用的社会保障税（亦称工薪税），属于职工及企业所负担的制度性交易成本。此外，有分析指出，五险一金中的企业缴纳额对于人力资源密集型企业来说是一笔很大的开支，企业从五险一金的缴纳中无法取得直接利益，这使得五险一金在某种程度上被视为一种税负。</p></li><li><p>如何理财？<br>先积累资产。</p></li><li><p>如何省钱？<br>抵制消费主义，不屯东西，不乱买东西。<br>另外一些日常用品如沐浴露可以用香皂替代（洗发的我也打算尝试）</p></li><li><p>哪些地方不要省钱？<br>投资自己</p></li></ul><h2 id="资源">资源</h2><ul><li><a href="https://linux-kernel-labs-zh.xyz/">Linux 内核教学</a></li><li><a href="https://pankajpipada.com/posts/2024-04-15-genai-resources/">Great Resources for Learning Generative AI and Large Language Models (LLMs)</a></li><li><a href="https://coder-hxl.github.io/x-crawl/cn/">灵活的 Node.js AI 辅助爬虫库</a></li><li><a href="https://zettelkasten.de/introduction/zh/">卢曼的卡片盒笔记法</a></li><li><a href="https://ppresume.com/">一个基于Latex的在线简历生成器</a><br>界面比较简约，试了一下似乎不能调整每一部分的顺序</li></ul>]]></content>
    
    
    <categories>
      
      <category>个人记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>weekly</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于zotero integration插件创建pdf笔记失败的解决方案</title>
    <link href="/2024/04/19/%E5%85%B3%E4%BA%8Ezotero%20integration%E6%8F%92%E4%BB%B6%E5%88%9B%E5%BB%BApdf%E7%AC%94%E8%AE%B0%E5%A4%B1%E8%B4%A5%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <url>/2024/04/19/%E5%85%B3%E4%BA%8Ezotero%20integration%E6%8F%92%E4%BB%B6%E5%88%9B%E5%BB%BApdf%E7%AC%94%E8%AE%B0%E5%A4%B1%E8%B4%A5%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
    
    <content type="html"><![CDATA[<h2 id="报错如图">报错如图</h2><p><img src="https://cdn.jsdelivr.net/gh/yohakuo/CDN/img/202404201738259.png" alt="1.png|420"></p><p><a href="https://github.com/mgmeyers/obsidian-zotero-integration/issues/58">参考的解决方案</a></p><h2 id="确认-pdf-在-zotero-文库中可以显示">确认 pdf 在 zotero 文库中可以显示</h2><p>这里是为了确认 zotero 是否识别到该文件，排查是否存在在 zotero 外给文件重命名了</p><h2 id="修改文件标题">修改文件标题</h2><p>不要出现冒号、符号或撇号</p><h2 id="修改-pdf-的格式">修改 pdf 的格式</h2><p>用Acrobat reader 修改成通用的 pdf 格式，比如PDF-X</p><blockquote><p>问题的提出者用 Adobe PDF file 格式覆盖原文件也成功了。<br>我用的是 PDF-X</p></blockquote><p>Acrobat reader -&gt; 文件 - 另存为 -&gt; 保存类型选 “PDF/X”</p><p>最后创建成功！</p>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Obsidian</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>IPTV相关原理</title>
    <link href="/2024/04/15/IPTV%E7%9B%B8%E5%85%B3%E5%8E%9F%E7%90%86/"/>
    <url>/2024/04/15/IPTV%E7%9B%B8%E5%85%B3%E5%8E%9F%E7%90%86/</url>
    
    <content type="html"><![CDATA[<blockquote><p>官方视频<br><a href="https://www.bilibili.com/video/BV1yN411y7yg/?spm_id_from=333.788&amp;vd_source=d137a8f68ec67946b0fef9810258f095">https://www.bilibili.com/video/BV1yN411y7yg/?spm_id_from=333.788&amp;vd_source=d137a8f68ec67946b0fef9810258f095</a></p></blockquote><h1>IPTV</h1><blockquote><p>IPTV 即交互式网络电视</p></blockquote><p>是一种利用宽带有线电视网，集互联网、多媒体、通讯等多种技术于一体，向家庭用户提供包括数字电视在内的多种交互式服务的技术。</p><p>用户可通过计算机、IP 机顶盒+普通电视、移动终端三种方式体验 IPTV 服务。</p><h2 id="IPTV-业务类型">IPTV 业务类型</h2><ol><li>电视类业务：广播电视、点播电视、个人视频录制等；</li><li>通信类业务：主要基于 IP 的语音业务、即时通信服务、电视短信等；</li><li>增值类业务：指电视购物、互动广告、在线游戏、股票行情等。</li></ol><h2 id="系统结构">系统结构</h2><blockquote><p>业务层相关网元设备的主要功能</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/yohakuo/CDN/img/202404160928247.png" alt="系统结构|450"></p><p>CDN Node（Content Delivery Network Node）<br>推送媒体流给 STB</p><p>STB（Set Top Box）<br>机顶盒，用户它体验 IPTV 服务</p><p>EPG（Electronic Program Guide）<br>推送节目菜单</p><p>MiddleWare<br>包括 EAS、SCP、CDN Manager、DB。</p><p>EAS（Edge Access Service）负责与 STB 交互。</p><p>SCP（Service Control Point） 帮助运营商掌握网络中各种业务对带宽的占用情况，业务配置、鉴权。</p><p>CDN Manager（内容分发网络管理系统）负责调配 CDN Node，进行内容的高效分发和网络资源的有效管理。</p><p>DB 负责存储用户认证授权信息，包括用户信息、内容信息、业务逻辑等。</p><h2 id="业务流程">业务流程</h2><p><img src="https://cdn.jsdelivr.net/gh/yohakuo/CDN/img/202404160928249.png" alt="业务流程|450"></p><p>自下而上的过程。</p><p>首先是机顶盒通过 BRAS（终端用户的网关，用户端要通过它去访问其他设备）申请获取 IP 地址。<br>然后在业务机房进行认证授权，注册用户名，有了这些信息后才能活得 ip 地址。<br>通过 MW 进行认证，鉴权，通过后给对应用户授权，调动源节目资源。<br>推送 EPG、CDN Node 的地址和用户产品包等。</p><p>当这些认证通过后，用户端就可以获取节目菜单，并正常观看节目了。</p><h1>组播原理</h1><p><img src="https://cdn.jsdelivr.net/gh/yohakuo/CDN/img/202404161008004.png" alt="组播原理|250"></p><p>单播是点对点，广播是点到全部点。<br>组播介于单播和广播之间，属于点对多点通信方式。当主机向一组主机发送信息存在于某个组的所有主机都可以接收到信息。</p><h2 id="组播-IP-地址">组播 IP 地址</h2><p><img src="https://cdn.jsdelivr.net/gh/yohakuo/CDN/img/202404161014143.png" alt="组播IP|520"></p><blockquote><p>实验中主要用 224.0.0.1 ，即给所有主机和路由器发送组播数据流</p></blockquote><h3 id="OSPF-在组播中的作用">OSPF 在组播中的作用</h3><blockquote><p>路由器是网络中的一种设备，它能够根据数据包的目的地地址，选择最佳的路径将其转发到下一个网络节点，直到数据包到达最终目的地。</p></blockquote><p>OSPF（开放最短路径优先）是一种内部网关协议（IGP），用于在单一自治系统内部进行路由信息的分发。OSPF通过使用Dijkstra算法计算最短路径树，来选择数据包从源头到目的地的最佳路径。它是一种动态的、基于链路状态的路由协议，可以快速适应网络拓扑的变化。</p><p>在组播环境中，OSPF可以通过其扩展功能来支持IP多播数据包的路由。这意味着OSPF能够识别多播流量，并为其选择高效的路由路径。</p><h2 id="组播协议的三层架构">组播协议的三层架构</h2><p><img src="https://cdn.jsdelivr.net/gh/yohakuo/CDN/img/202404161024889.png" alt="组播协议架构|520"></p><blockquote><p>R1 可以做成组播汇聚点（RP），所有的源数据通过 RP 汇聚，再向下转发，RP 也相当于组播源</p></blockquote><p>MS（组播源）一般以单播形式发送数据流，然后到达下一层–组播网络。</p><p>这一层是由路由器或者具有路由功能的三层设备组成的组播路由，运行组播路由协议（如 PIM 协议无关）</p><p>到 R 4、R5、R6 这一部分，属于组成员管理的接入部分。<br>与主机相连的边缘路由器，运行的是 IGMP（内部网关管理协议），这个协议可以控制哪些用户加入该组播组里。</p><h2 id="组播协议组成">组播协议组成</h2><p><img src="https://cdn.jsdelivr.net/gh/yohakuo/CDN/img/202404161034067.png" alt="组播协议组成|520"></p><blockquote><p>实验主要用到 IGMP（v3），PIM-SM（用户数小用稀疏协议，主机发送请求才发）</p></blockquote><h3 id="PIM-SM-转发">PIM-SM 转发</h3><p><img src="https://cdn.jsdelivr.net/gh/yohakuo/CDN/img/202404161042450.png" alt="PIM-SM|520"></p><blockquote><p>在 DR 与主机相连的一侧，用 IGMP 管理。</p></blockquote><p>主机要加入这个组，首先要发送加入请求，DR 向上游报告请求，到达 RP。<br>RP 通过请求后，组播数据流就可以从上往下转发，通过 DR 到达主机。</p><h3 id="IGMP">IGMP</h3><blockquote><p>与组播源相连的路由器叫第一跳路由器。下一跳路由器（组播路由）与主机 (PC) 相连。</p></blockquote><p>IGMP 组播组管理协议，IGMP 协议运行于主机和与主机直接相连的组播路由器之间。</p><p>主机通过 IGMP 协议告诉本地路由器希望加入并接受某个特定组播组的信息。</p><p>路由器通过 IGMP 协议周期性地查询局域网内某个已知组的成员是否处于活动状态（即该网段是否仍有属于某个组播组的成员），实现所连网络组成员关系的收集与维护。</p><blockquote><p>路由器会发出一个查询数据包，当有主机要接受组播数据流的时候，那么终端会向路由器回复一个波，表示它还在这个组播组里并要接收组播数据流。</p><p>如果一段时间后，组播路由器没有接收到回复，那么上游发来的数据流就不会向下转发。</p></blockquote><h3 id="IGMP-Snooping">IGMP Snooping</h3><p>对于未使能 igmp-snooping 时，由于不知道哪些端口下存在接收者，因此交换机向 VLAN 内的所有端口（除入端口外）转发该播数据报文，此 VLAN 内的组播组成员和非组播组成员都能收到组播数据报文。</p><p>IGMP-Snooping 是实现组播转发树上最后一跳路由器到接收者之间二层网络上的组播数据按需分发的协议，如下图：</p><p><img src="https://cdn.jsdelivr.net/gh/yohakuo/CDN/img/202404161102825.png" alt="IGMP-Snooping|520"></p><p>IGMP snooping 的实现机理</p><p>交换机通过侦听主机向路由器的 IGMP 成员报告消息的方式，形成组成员和交换机接口的对应关系；交换机根据该对应关系将收到组播数据包只转给具有组成员的接口。</p><p>IGMP proxy与 IGMP Snooping 实现功能相同但机理相异</p><p>IGMP snooping 只是通过侦听 IGMP 的消息来获取有关信息，而 GMP proxy则拦截了终端用户的 igmp 请求并进行相关处理后，再将它转发给上层路由器。<br>所以在 GMP snooping里面形成的 table 是组成员和交换机接口的对应关系，在 IGMP Proxy 里面形成的是组播路由表。</p>]]></content>
    
    
    <categories>
      
      <category>信息</category>
      
    </categories>
    
    
    <tags>
      
      <tag>IPTV</tag>
      
      <tag>概念</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>通信工程</title>
    <link href="/2024/04/14/%E9%80%9A%E4%BF%A1%E5%B7%A5%E7%A8%8B/"/>
    <url>/2024/04/14/%E9%80%9A%E4%BF%A1%E5%B7%A5%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<blockquote><p>摘抄自鲜枣课堂</p></blockquote><h1>基本信息</h1><p>“通信工程”属于二级学科，归属于“信息与通信工程”一级学科之下。<br>通信工程的研究方向，就是通信。<br>通信的本质，就是信息的互通。也就是说，通信工程主要研究信号的产生、发送和接收，信息的传输、交换和处理。</p><p>在国外（例如美国）的学科分类中，通信工程被认为是电子工程的重要分支。<br>电子工程，也就是大家经常听说的EE，和通信、电信、电子、光电、集成电路等相关。<br>和EE相对应的，就是CS,Computer Science（计算机科学）。</p><blockquote><p>CS的研究方向包括计算机系统、算法、人工智能、数据存储技术、软件工程、人机交互等。</p></blockquote><p>简单来说，EE偏硬件、偏底层实现，而CS偏软件、偏上层应用。</p><h1>课程及对应方向</h1><p>从方向来看，就是五大类：软件类、硬件类、无线类、网络类、光类。</p><p>软件类：就是编程，写代码。重点课程是数据结构、软件工程概论、软件项目管理，还有C/C++、java、python等程序语言开发。</p><p>硬件类：主要是数电、模电、高频电子线路、信号与系统、数字信号处理、嵌入式开发，单片机等。再往前就是微电子、半导体、集成电路。现在没什么纯硬件，都是软件驱动硬件，搞软硬结合。所以说，硬件专业=硬件+软件。</p><p>无线类：这块其实是正宗的“通信工程”，专门研究通信中最大的瓶颈环节——无线空口（空中接口）。简单来说，无线空口就是研究如何通过无线电磁波更快更好地传输数据。它的重点课程是信号与系统、数字信号处理、电磁场与电磁波、通信原理、信息论与编码等。无线类的难度不亚于硬件类，都是掉头发的课程。</p><p>网络类：网络工程，主要是研究路由交换，和路由器、交换机、防火墙等数通设备打交道比较多。除了数据网络之外，网络类实际上还包括了系统类知识，就是和操作系统、数据库打交道，进一步来说，就是搞云计算和大数据的方向。这块和软件类一样，偏IT应用，好处是不需要什么数电模电信号处理方面的知识。</p><p>最后一类，就是光。国内有很多光电相关的专业，例如光电信息工程等。除了研究光学（镜片、透镜、激光）之外，就有很多从事光通信领域的研究，说白了，就是光纤通信。这块是通信传输网的重要领域。主要课程是物理光学、应用光学、信息光学、光电检测、激光原理等。</p><p><img src="https://cdn.jsdelivr.net/gh/yohakuo/CDN/img/202404152231187.jpg" alt=""></p><p>项目管理、工程规范、项目概预算等，在实际工作中很实用，却在教学计划中被忽视。</p><p>如果大家不想被带偏的话，在大一的时候就要自我评估一下，自己喜欢哪个方向，适合哪个方向，然后朝这个方向努力。除非考研，不然的话，该放弃的就要学会放弃。</p><h1>就业</h1><p>通信行业，简而言之，就是围绕用户通信需求，提供通信产品和服务的行业。<br>除了面向大众的公共通信服务（移动通信、宽带接入、固定电话、IPTV等）之外，<br>通信服务还包括很多面向行业企业的专网通信服务（例如电网通信、铁路通信、港口通信、应急通信等）。<br>以云计算、大数据、程序开发、人工智能为代表的信息技术（也就是大家更为熟知的IT）已经超过通信技术，变成了年轻人更为热衷的就业方向。</p><h2 id="单位">单位</h2><ul><li><p><strong>通信运营商</strong><br>像中国移动、中国电信、中国联通这样的，负责建设和运营电信通信网络，并提供通信服务的企业，就是基础电信服务运营商，也简称为运营商。</p><p>中国广电（中国广播电视网络有限公司），也属于电信运营商，大家往往会忽视这一点。而中国铁塔反而不是运营商，它是基础设施服务提供商，专门为运营商提供铁塔、站房之类的基础设施服务。</p></li><li><p><strong>通信设备商</strong><br>通信设备商，就是负责研发制造通信设备的厂商。像华为、中兴、爱立信、诺基亚，就是目前世界上最大的四家通信设备商。<br>上述四家设备商，产品线最多，种类最齐全，覆盖最广，所以也称为通信综合解决方案提供商。其它一些设备商，可能只专注于通信的某个领域，例如基站或传输设备等。</p></li><li><p><strong>分包商、供应商、集成商、代理商</strong><br>通信设备的复杂度比较高，专业度也比较高，因此，安装、调试和维护的过程非常复杂，通常会以项目化的方式来运作。<br>这些项目如果仅靠设备商、运营商自己来做，是不可能的。所以，会有很多公司加入进来，出人出力，共同参与。这类公司，就是<strong>分包商（或者叫合作方）</strong>。</p><p>有的公司是整包，就是独自承包一个项目的工程。有的公司是分包，就是承包其中一部分。还有的公司，是承包项目之后，将一部分交由其它公司去做，就叫做转包（有时候是不允许的）。<br>通信行业的产业链很庞大，从原材料到元器件，再到单板、设备，会有一系列的链条。上游对下游来说，就叫<strong>供应商</strong>。做产品集成，提供整体打包解决方案的，叫<strong>集成商</strong>。<br>再有就是<strong>代理商</strong>，大家应该都知道，就是负责产品代理销售的公司。</p></li></ul><h2 id="产业链">产业链</h2><p><img src="https://cdn.jsdelivr.net/gh/yohakuo/CDN/img/202404152232299.png" alt=""></p><h2 id="其他单位">其他单位</h2><p>通信行业还包括政府部门（工信部、通管局）、研究院所（信通院、设计院、中电下属院所）、高校等</p><h1>职称</h1><h2 id="无线通信">无线通信</h2><p><img src="https://cdn.jsdelivr.net/gh/yohakuo/CDN/img/202404152233104.png" alt=""></p><h3 id="移动终端产品">移动终端产品</h3><p>包括手机、平板电脑（Pad）等消费电子产品，刚才说了，一般归为IT类.还有无线通讯模块，例如GPRS模块，物联网模块等，这些还是属于通信类。研发、制造、维修这类通讯终端的，都叫<code>终端工程师</code>。</p><h3 id="无线接入网"><strong>无线接入网</strong></h3><p>什么是接入网？负责把终端（例如手机）“接入”到通信网络里面来的，就是“接入网”。<br>什么东西能把手机连到通信网络里？ 对了，就是基站。负责基站安装调测的工程师，就是 <code>基站工程师</code>。</p><p>如果需要把一个区域用无线信号覆盖好（不留死角，不留盲区），那么，基站的位置、数量、天线的朝向等都需要精密计算，这个工作有一群专门的人来负责，叫 <strong>“网络规划优化工程师”</strong>（简称 <code>网规网优工程师</code>）。</p><h3 id="移动核心网">移动核心网</h3><p>电信机房里面，那些负责通信数据的处理和交换的设备，就是<strong>核心网设备</strong>。负责开通维护核心网设备的人，就是 <strong>“核心网工程师”</strong>。</p><h3 id="承载网">承载网</h3><p>如下图所示，基站与核心网之间，核心网与核心网之间，都要传输数据。所有这之间的数据传输，都是通过<strong>承载网设备</strong>。负责承载网设备的人，叫 <strong>“承载网工程师”</strong>，也经常叫做 <strong>“传输工程师”</strong>。<br><img src="https://cdn.jsdelivr.net/gh/yohakuo/CDN/img/202404152233611.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/yohakuo/CDN/img/202404152233673.png" alt=""></p><h3 id="业务产品">业务产品</h3><p>在核心网里面，还有很多功能性的产品，为了实现某一特定功能业务而存在，例如短信、彩铃、智能网（预付费电话用的）。这些产品就叫做<strong>业务产品</strong>。它们有时候算核心网产品，有时候单独就叫业务产品。<br>负责开通调测这些产品的人，叫做 <code>业务产品工程师</code>。</p><h2 id="有线通信">有线通信</h2><p><img src="https://cdn.jsdelivr.net/gh/yohakuo/CDN/img/202404152233730.png" alt=""></p><h3 id="有线（固网）终端部分">有线（固网）终端部分</h3><p>大家都知道的是固定电话。除此之外，还有行业终端（银行的ATM机、视频会议电话系统的视频电话机），还有某种具体业务的终端（IPTV的机顶盒）。<br>固网终端现在主要是指行业专用终端，大企业用，所以算通信多一点，不算IT。</p><h3 id="接入网">接入网</h3><p><strong>有线的接入网，主要是指从骨干网络到用户终端的所有设备。</strong></p><h2 id="补充">补充</h2><blockquote><p>通信项目，尤其是海外通信项目，一般都是 Turn-Key项目（交钥匙项目）。设备商要从零开始，从一个空房子到最后完成所有工作，直接把建好的机房和网络交给客户运营商。所以，会涉及到基础建设（土建）。</p></blockquote><ul><li><strong>工程督导</strong><br>就是负责通信工程的建设实施，指导和监督工程队按照设计图纸完成施工。有点类似于“高级监工”吧，工程施工的工作还是很辛苦的。</li><li><strong>运维</strong><br>设备调试交付之后，处于运行阶段，就需要人进行维护，查看运行状态，及时处理隐患，解决问题。这类看似简单的工作，就是 <strong>“运维工程师”</strong> 来做。相比于企业级的运维，电信级运维责任更巨大，压力也就更大，工作非常辛苦。</li><li><strong>能源工程师</strong><br>基站和机房的设备，都是用电的，所以要有电源。机房为了应对停电，还需要配备电池。负责电源电池设备的工程师</li></ul>]]></content>
    
    
    <categories>
      
      <category>信息</category>
      
    </categories>
    
    
    <tags>
      
      <tag>read</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2024-W15</title>
    <link href="/2024/04/13/2024-W15/"/>
    <url>/2024/04/13/2024-W15/</url>
    
    <content type="html"><![CDATA[<p>本篇是对 <code>2024-04-08 </code> 到 <code> 2024-04-14</code> 这一周生活的记录与思考。</p><p>这是逐渐好转的一周！英语的完成情况很好，每天复习单词，做每日一句，还抽了一天做阅读。<br>数学相对来说没那么勤，基本上是一天听课，一天做题，目前题目的进度还比课落后一讲（下周补起来）</p><p>今天我决定参考林由我分享的学语言的经验来学英语，不是为了考试，而是为了兴趣的需要。很多优质的信息源都是英语，而我时常因为语言障碍感到挫败，所以预期的目标是英语听口能达到可以听我喜欢播客的水平，阅读可以看懂 x 上的推文。</p><p>偶然刷到一个和我同专业的大二生发布的博客项目，顺便问了一下他的打算，果然，他已经决定转码。果然人会对自己感兴趣的东西投入更多，看他为这个项目写代码花了很多时间，我更加确信我对写代码没太大兴趣，甚至可以说硬件会更吸引我，所以不出意外我应该还会在这个专业学习一段时间。本科基本上没学到什么 (唯一有几个讲的还行的课也是对应考研的呵呵)，不知道国内的读研环境能让我更加了解这个领域吗？不多想了。</p><p>很惊喜地在线上和姐妹们有了一次小聚会，和同频的人交流的感觉真的非常满足！就业的一个姐妹很会控场，找话题和 cue 人，也分享了很多东西（这次活动也是她提起的）<br>另一个姐姐说话很有条理，联想组织事例的思维很灵活，贡献了好多金句。<br>还有个技术姐妹非常硬核，想要白手起家创业，期待未来的女老板女大姥们！</p><h2 id="真实的读研生活是怎样">真实的读研生活是怎样</h2><p>听了关于研究生生活的一个播客，感觉她们非常的努力，无论是博士还是硕士，几乎天天泡在实验室，但却一样地焦虑，她们甚至严重到有躯体化的反应，做实验的时候手都会失控的颤抖。</p><p>是因为环境导致的吗？还是说多种因素共同作用的呢？</p><h2 id="提前打完退堂鼓">提前打完退堂鼓</h2><p>我是提前打退堂鼓型选手。</p><p>在做DSP 大作业报告前，我的心率狂飙，心脏跳的非常快以至于我耳朵似乎能感受到回响。</p><p>大概是因为有这样的前摇，给了我缓冲时间。</p><p>我上台的时候几乎感受不到紧张了。</p><p>但这也有一个问题，如果我就是第一个上台的呢？</p><h2 id="朋友是什么">朋友是什么</h2><blockquote><p>[!cite]  戴锦华老师认为的友谊<br>它指的是一种高度亲密的状态，是一种志同道合，是一种相互的欣赏，相互的深刻的理解。</p><p>可能友谊是一个特别需要岁月和时光去浇灌，去培养的情感。</p><p>当一段真正的友谊成为某一种事实的时候，被养育出来的时候，它同时伴随着某一种高度的默契。</p><p>一个对于朋友之间的，我会喜欢用超越性的情感。<br>它是那种，我知道我可以为你做什么，我愿意为你做什么，<br>或者说，我愿意为你做我所可能做的一切，这样的一种完全不在功利的，不在世俗的，不在价值的，不在交换意义上的一种情感的连接。</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>个人记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>weekly</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2024-W14</title>
    <link href="/2024/04/06/2024-W14/"/>
    <url>/2024/04/06/2024-W14/</url>
    
    <content type="html"><![CDATA[<p>本篇是对 <code>2024-04-01 </code> 到 <code> 2024-04-07</code> 这一周生活的记录与思考。</p><p>大部分时间在感冒，难受。</p><p>为了早点结课我把一个实验课的设计作业提前做了，还有 Latex 有点麻烦，打算用 Typst 替代它 。</p><p>模统的选题还没定下来，希望后面不会太影响我。</p><p>这个月大概是我原计划的一个节点，还有好多事情要做，尽量 all in 高数。</p><p>挺巧的，今天刚好是生日，不过我已经提前一周买了蛋糕庆祝完了。我对生日越来越随意了。不过也不奇怪， 20 岁的我就不想让以后的我特意为生日去想做点什么了。21 岁的我也不想改变，我新的愿望是留下这些记录，让 25 岁的我，30 岁的我看看，有什么改变了，又有什么始终不变。</p><h2 id="摘抄">摘抄</h2><blockquote><p>[!cite]<br>祝你拥有自我并珍视自我，自我是东亚文化的贬义词，但倘若有人说你自我甚至过度自我，请把它当作最高的赞美，自我且强势，锐利且直接，这样的女性是东亚社会的绝对恶女，但是却是自己和整个女性群体的奇珍异宝。</p><p>女性想在生存上不被 repressed, 情绪上不被 depressed ，只有通过 express，把力和作用释放出去，强烈地表达自我，强势地捍卫自我，拥有自我的人才拥有活力，拥有活力的人才可能使战斗和进步发生，请为了你自己也为了女性命运共同体，尊重珍视你的自我，并为其他女性的自我喝彩，不要为了其他女性的自我感到羞愧，更不要仇视其他女性的自我。</p></blockquote><blockquote><p>[!cite]<br>个人的财务管理，其实只有两条原则：一是支出小于收入，二是做对投资，投资对象可以是能够获利的资产，也可以是你的个人技能。</p></blockquote><blockquote><p>[!cite]<br>如果你感觉自己被困住了，焦虑并充满消极情绪，生命出现了停滞，那么治疗方法很简单：做点什么。</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>个人记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>weekly</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Typst初了解</title>
    <link href="/2024/04/04/Typst%E5%88%9D%E4%BA%86%E8%A7%A3/"/>
    <url>/2024/04/04/Typst%E5%88%9D%E4%BA%86%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<h1>安装</h1><ul><li>非常简单，在 Vscode 下载两个拓展 <code>Typst LSP</code> 和<code>Typst Preview</code></li><li>然后创建 <code>.typ</code> 文件即可开始</li><li>快捷键 <code>ctrl+k</code> <code>v</code> 进行预览</li></ul><h1>文档</h1><ul><li>非官方的中文<a href="https://typst-doc-cn.github.io/docs/tutorial/">教程</a></li><li>官方<a href="https://typst.app/docs/">教程</a></li></ul><h3 id="数学">数学</h3><blockquote><p>基本用法和 ob 中简化的 markdown 很相似</p></blockquote><ul><li><a href="https://typst-doc-cn.github.io/docs/reference/math/">数学语法</a></li><li><a href="https://typst-doc-cn.github.io/docs/reference/symbols/sym/">符号部分</a> （比如箭头）</li></ul><p>公式与周围的文本默认在同一行上。<br>如果想让它新起一行，要在在其开头和结尾插入一个空格</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-symbol">$</span> Q = rho A v + C <span class="hljs-symbol">$</span><br></code></pre></td></tr></table></figure><p>数学模式将始终原样地显示单个字母。要隐式地表明这是单个字母之间的乘法，请在它们之间加入空格。<br> <br> 多个字母将被视作为符号、变量或函数名称。用 <code>&quot;&quot;</code> 包起来</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">Q</span> = rho A v + <span class="hljs-string">&quot;time offset&quot;</span><br></code></pre></td></tr></table></figure><p></p><h1>格式</h1><blockquote><p>一个 语法糖</p><p>任何 <code>fn(...)[XXX][YYY][ZZZ]</code>，都会被自动转成 <code>fn(..., [XXX], [YYY], [ZZZ])</code></p></blockquote><h2 id="set-规则">set 规则</h2><p>&gt;可以将样式属性应用于某类内容块的所有实例<br> <br> 输入 <code>set</code> 关键字编写 Set 规则，后面是要设置属性的函数的名称，括号是需要的新默认参数列表。</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">#set par(justify: true)<br><br><span class="hljs-section">= Background</span><br>In the case of glaciers, fluid<br>dynamics principles can be used<br>to understand how the movement<br>and behavior of the ice is<br>influenced by factors such as<br>temperature, pressure, and the<br>presence of other fluids (such as<br>water).<br></code></pre></td></tr></table></figure><p>Set 规则中常用的一些函数的列表</p><ul><li><a href="https://typst-doc-cn.github.io/docs/reference/text/text/"><code>text</code></a> 用于设置文本的字体、大小、颜色和其他属性</li><li><a href="https://typst-doc-cn.github.io/docs/reference/layout/page/"><code>page</code></a> 用于设置页面大小、边距、页眉、启用栏和页脚</li><li><a href="https://typst-doc-cn.github.io/docs/reference/model/par/"><code>par</code></a> 用于对齐段落、设置行距等</li><li><a href="https://typst-doc-cn.github.io/docs/reference/model/heading/"><code>heading</code></a> 用于设置标题的外观与启用编号</li><li><a href="https://typst-doc-cn.github.io/docs/reference/model/document/"><code>document</code></a> 用于设置 PDF 输出中包含的元数据，例如标题和作者</li></ul><h3 id="一个示例">一个示例</h3><blockquote><p>更大的边距和衬线字体</p></blockquote><figure class="highlight leaf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs leaf"><span class="hljs-punctuation">#</span><span class="hljs-keyword">set</span> text(<br>  font: &quot;New Computer Modern&quot;,<br>  size: 10pt<br>)<br><span class="hljs-punctuation">#</span><span class="hljs-keyword">set</span> page(<br>  paper: &quot;a6&quot;,<br>  margin: (x: 1.8cm, y: 1.5cm),<br>)<br><span class="hljs-punctuation">#</span><span class="hljs-keyword">set</span> par(<br>  justify: true,<br>  leading: 0.52em,<br>)<br><br>= Introduction<br>In this report, we will explore the<br>various factors that influence fluid<br>dynamics in glaciers and how they<br>contribute to the formation and<br>behavior of these natural structures.<br><br>...<br><br><span class="hljs-punctuation">#</span><span class="hljs-keyword">align</span><span class="hljs-params">(<span class="hljs-variable">center</span> <span class="hljs-operator">+</span> <span class="hljs-variable">bottom</span>)</span>[<br>  <span class="hljs-punctuation">#</span><span class="hljs-keyword">image</span><span class="hljs-params">(<span class="hljs-string">&quot;glacier.jpg&quot;</span>, <span class="hljs-variable">width</span>: 70<span class="hljs-operator">%</span>)</span><br><br>  *Glaciers form an important<br>  part of the earth&#x27;s climate<br>  system.*<br>]<br></code></pre></td></tr></table></figure><ul><li><p><a href="https://typst-doc-cn.github.io/docs/reference/text/text/"><code>text</code></a> 的 Set 规则。将字体大小设置为 <code>10pt</code>，将字体设置为 <code>&quot;New Computer Modern&quot;</code>。</p></li><li><p><a href="https://typst-doc-cn.github.io/docs/reference/layout/page/"><code>page</code></a> 的 Set 规则，它接收两个参数：页面大小和页面边距。</p></li><li><p>行距：它被指定为 <a href="https://typst-doc-cn.github.io/docs/reference/layout/length/">length</a> 值，使用 <code>em</code> 单位来指定相对于字体大小的行距，<code>1em</code> 相当于当前字体大小（默认为 <code>11pt</code>）。</p></li></ul><h3 id="对标题进行编号">对标题进行编号</h3><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">#set heading(numbering: &quot;1.&quot;)<br><br><span class="hljs-section">= Introduction</span><br>#lorem(10)<br><br><span class="hljs-section">== Background</span><br>#lorem(12)<br><br><span class="hljs-section">== Methods</span><br>#lorem(15)<br></code></pre></td></tr></table></figure><blockquote><p>指定了字符串 <code>&quot;1.&quot;</code> 作为编号参数。这将告诉 Typst 用阿拉伯数字对标题进行编号，并在每个级别的编号之间放置一个点。</p></blockquote><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">#set heading(numbering: &quot;1.a&quot;)<br><br><span class="hljs-section">= Introduction</span><br>#lorem(10)<br><br><span class="hljs-section">== Background</span><br>#lorem(12)<br><br><span class="hljs-section">== Methods</span><br>#lorem(15)<br></code></pre></td></tr></table></figure><blockquote><ol><li>a</li><li>b</li></ol></blockquote><h2 id="Show-规则">Show 规则</h2><blockquote><p>附上项目的 logo</p></blockquote><figure class="highlight leaf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs leaf"><span class="hljs-punctuation">#</span><span class="hljs-keyword">show</span> &quot;ArtosFlow&quot;: name =&gt; box[<br>  <span class="hljs-punctuation">#</span><span class="hljs-keyword">box</span><span class="hljs-params">(<span class="hljs-keyword">image</span><span class="hljs-params">(</span></span><br><span class="hljs-params"><span class="hljs-params">    <span class="hljs-string">&quot;logo.svg&quot;</span>,</span></span><br><span class="hljs-params"><span class="hljs-params">    <span class="hljs-variable">height</span>: 0.7<span class="hljs-variable">em</span>,</span></span><br><span class="hljs-params"><span class="hljs-params">  )</span>)</span><br>  <span class="hljs-punctuation">#</span><span class="hljs-keyword">name</span><br>]<br><br>This report is embedded in the<br>ArtosFlow project. ArtosFlow is a<br>project of the Artos Institute.<br></code></pre></td></tr></table></figure><blockquote><p><code>show</code> 关键字，后面跟着我们希望以不同方式显示的文本字符串，以及一个冒号。<br>然后，我们编写一个函数，该函数将应显示的内容作为参数输入，在这里，我们称该参数为 <code>name</code>。我们现在可以使用函数体中的 <code>name</code> 变量来输出名称 <code>ArtosFlow</code>。</p><p>Show 规则在名称前面添加 Logo 图像，并将结果放入 <code>box</code> 中，以防止 Logo 和名称之间出现换行符。 图像也放在一个 <code>box</code> 中，这样它就不会出现在自己的段落中。</p></blockquote><h1>在线处理</h1><ul><li><a href="https://typst.app/">在线编辑器</a></li><li><a href="https://typst.app/universe/search?kind=templates">模板社区</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Typst</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2024-W13</title>
    <link href="/2024/03/30/2024-W13/"/>
    <url>/2024/03/30/2024-W13/</url>
    
    <content type="html"><![CDATA[<p>本篇是对 <code>2024-03-25 </code> 到 <code> 2024-03-31</code> 这一周生活的记录与思考。</p><p>准确来说，今天是这个月的最后一天。顺便回顾一下：这个月最大的变化是有了很多感兴趣的东西，并且需要时间学习。这就导致我看高数视频的时间变少了，看视频真的很耗时间… 我甚至是倍数播放的，边看边做笔记。</p><p>接下来的这个月尝试轮流看视频和做题。</p><p>每日一句怎么感觉越往后越简单了？</p><hr><p>朋友问我一天是不是有 48 小时，我说怎么了，她说我考研了还能看书、听博客、关注时事。</p><p>自我反省一下，有时候是刷了一些不必要的信息。</p><h2 id="Anatomie-d’une-chute（坠落的审判）">Anatomie d’une chute（坠落的审判）</h2><blockquote><p>很好看！塑造了一个强大理性的女主。</p><p>有些人指责女主冷漠。难度正常人吵架不先考虑自己？这老公干了家务（主动干这个也是为了消解自己的内疚），然后发现自己感受不到价值之后，就开始对女主情感勒索，又是指责又是言语攻击，根本不是要好好谈的态度，并且多次把自己没法写作推给没有时间，然后还觉得是女主欠了他这些时间，越说越让人上火…</p><p>要是女主再冷漠点，我也很喜欢她。实际上女主是不愿意去抹黑她老公的，除了在录影像那里说的，在法庭上她还低声反驳了她的律师，并且在陈述中也没有去攻击他。</p><p>那个录音放出来让我觉得这个男的更加窝囊废。管他是自杀还是意外？这根本不是重点。</p><p>一个事业成功，情绪稳定，思维流畅清晰的女人，在进入婚姻关系都会有面临这种意外审判的风险，而且赢的不容易。审判本身就是惩罚，胜利也没有奖励。</p></blockquote><h2 id="岩中花述对话阿庞">岩中花述对话阿庞</h2><blockquote><p>这一期的关键字【少年时期的身份认同】、【生育的考量】、【看不见的女性】、【生活选择的价值判断】<br>冻卵这件事，就是资本主义社会的「骗局」和「陷阱」</p></blockquote><ul><li>💭</li></ul><blockquote><p>阿庞在她 36 岁时，开始询问每一个有孩子的人生孩子是什么样的过程？现实是很多女性的事业因为生育受阻甚至放弃，沦为家庭主妇。</p><p>举了一个实例，人们只看得到事业家庭两全的大爷，至于大妈，只能算家庭美满，【大爷的事业不会分给大妈】</p><p>阿庞分享了自己冻卵的经历，并不觉得冻卵让她觉得有了生育的选择器，因为还有生，还有养。</p><p>苹果耳机测试的女性数据不足，没有考虑长头发的人。</p><p>我们敬佩那些克服生理差距达到巨大成功的女性，但我们也应该允许自己平凡普通地活着，不要被他人的标准影响。</p></blockquote><h2 id="海马星球的最新一期">海马星球的最新一期</h2><blockquote><p>纳入式性行为不是性生活！</p><p>chun 女膜是编造的概念，是技术落后的时代男人为了保护自己的财产继承的伪概念，真是恶毒。本身我们体内就不存在一个封闭的&quot;膜&quot;，不然怎么排出月经呢。</p><p>HPV 病毒有几百种！而九价疫苗大概只预防十几种，防不胜防。</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>个人记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>weekly</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>R的下载和安装</title>
    <link href="/2024/03/30/R%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/"/>
    <url>/2024/03/30/R%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h2 id="参考资料">参考资料</h2><blockquote><p>R 语言编程：基于 tidyverse</p></blockquote><h2 id="下载-R-和-RStudio">下载 R 和 RStudio</h2><blockquote><p><a href="https://mirrors.bfsu.edu.cn/CRAN/">https://mirrors.bfsu.edu.cn/CRAN/</a><br><a href="https://www.rstudio.com/products/rstudio/download">https://www.rstudio.com/products/rstudio/download</a></p></blockquote><h3 id="R-安装设置">R 安装设置</h3><ul><li>安装到 D 盘，不要有中文路径，且路径不要有空格，下载最新版本</li><li>建议取消勾选 “Message translations”（英文报错更容易搜索解决办<br>法）</li></ul><h3 id="RStudio-软件设置">RStudio 软件设置</h3><ul><li>切换安装包的国内镜像源（任选其一），以保证正常安装 R 包：<br>Tools -&gt; Global Options… -&gt; Options -&gt; Packages，点击<br>Change 修改为，比如 Beijing Foreign Studies University</li><li>设置保存文件的默认编码方式为 UTF-8, 已保证保存出来的各种 R 文件，都将采用 UTF-8 编码：<br>Tools -&gt; Global Options… -&gt; code -&gt; Saving，在<br>Default text encoding 框，点 change，修改为 UTF-8</li><li>勾选 Code -&gt; Display 下的 Rainbow parentheses 框，这样代码中的配对括号将用不同彩虹色匹配；</li><li>设置 General -&gt; Workspace 取消勾选 Restore .RData into workspace at startup, 并将其下的 save workspace to .RData on exit: 改为 Never. 避免每次打开 RStudio 都加载以前数据。</li></ul><h2 id="R-包">R 包</h2><blockquote><p>踩了大坑</p></blockquote><ul><li>来自官方 CRAN 的 R 包<br>直接使用命令安装，将自动安装依赖包</li></ul><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake"><span class="hljs-keyword">install</span>.packages(<span class="hljs-string">&quot;openxlsx&quot;</span>)<br></code></pre></td></tr></table></figure><ul><li>Github 也是 R 包的较大的来源，手动下载<ul><li>打开 <a href="https://github.com/tidyverse/dplyr">github上的库)</a></li><li>clone 或者下载 zip 到本地并解压（记录地址）</li><li>运行命令</li></ul></li></ul><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">install.packages(<span class="hljs-string">&quot;你的包地址&quot;</span>, repos = NULL, <span class="hljs-keyword">type</span> <span class="hljs-type">= </span><span class="hljs-string">&quot;source&quot;</span>)<br></code></pre></td></tr></table></figure><h2 id="包的相关操作">包的相关操作</h2><ul><li>加载包</li></ul><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">library</span><span class="hljs-params">(openxlsx)</span></span><br></code></pre></td></tr></table></figure><ul><li>更新包</li></ul><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">update</span>.packages(&quot;openxlsx&quot;)<br><span class="hljs-keyword">update</span>.packages() # 更新所有包<br></code></pre></td></tr></table></figure><ul><li>删除包</li></ul><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-comment">remove.packages(&quot;openxlsx&quot;)</span><br></code></pre></td></tr></table></figure><h2 id="绝对路径与相对路径">绝对路径与相对路径</h2><ul><li><p>绝对路径<br>从盘符开始的完整路径，比如 E:/R 语言/data/a123.csv</p></li><li><p>相对路径<br>指相对于当前路径的路径。</p><p>比如，当前文件夹 E:/R 语言中有 data 文件夹，里面有数据文件a123.csv，要写能访问到它的路径，只需写 data/a123.csv</p></li><li><p>获取或设置当前路径</p></li></ul><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">getwd</span><span class="hljs-params">()</span></span><br><span class="hljs-function"><span class="hljs-title">setwd</span><span class="hljs-params">(<span class="hljs-string">&quot;D:/R-4.1.1/tests&quot;</span>)</span></span><br></code></pre></td></tr></table></figure><blockquote><p>注意：R 路径中的<code> \</code> 必须用<code> /</code> 或 <code>\\</code> 代替</p></blockquote><h2 id="R-项目">R 项目</h2><ul><li>R 脚本是单个可执行的 R 代码文件，后缀名为. R，单击 New File按钮，选择 R Script，或使用快捷键 Ctrl + Shift + N, 则新建R 脚本；</li><li>R 项目是完成某个项目或任务的一系列文件的合集（文件夹），包括数据文件、若干 R 脚本及其他附件，其中包含一个 *.Rproj 文件；</li><li>建议使用 R 项目 + 相对路径，这样能方便系统地管理服务于共同目的一系列的文件，可以方便移动位置甚至是移到其他电脑，而不需要做任何有关路径的代码修改就能成功运行。</li></ul>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>R</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Latex如何插入图片</title>
    <link href="/2024/03/25/Latex%E5%A6%82%E4%BD%95%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/"/>
    <url>/2024/03/25/Latex%E5%A6%82%E4%BD%95%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/</url>
    
    <content type="html"><![CDATA[<h2 id="图片的插入">图片的插入</h2><h3 id="控制">控制</h3><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><span class="hljs-string">\FloatBarrier</span>  <span class="hljs-comment">#在图片后放置防止浮动</span><br><br>%%去掉子标题的标号（a）...  放在导言区域<br><span class="hljs-string">\makeatletter</span><br><span class="hljs-string">\renewcommand&#123;\@thesubfigure&#125;&#123;\hskip\subfiglabelskip&#125;</span><br><span class="hljs-string">\makeatother</span><br></code></pre></td></tr></table></figure><h3 id="单图">单图</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css">\begin&#123;<span class="hljs-selector-tag">figure</span>&#125;<span class="hljs-selector-attr">[htp]</span><br>\centering<br>\includegraphics<span class="hljs-selector-attr">[width=0.5\linewidth]</span>&#123;fig/<span class="hljs-number">15</span><span class="hljs-selector-class">.png</span>&#125;<br>\<span class="hljs-selector-tag">caption</span>&#123;&#125;<br>\end&#123;<span class="hljs-selector-tag">figure</span>&#125;<br></code></pre></td></tr></table></figure><h3 id="两图">两图</h3><p>%\usepackage{caption}<br>%\usepackage{subfigure}<br>%导言区域要添加以上两个包</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><span class="hljs-string">\begin&#123;figure&#125;[htbp]</span><br>    <span class="hljs-string">\centering</span>  %居中<br>    <span class="hljs-string">\subfigure[</span> ]&#123;   %第一张子图<br>        <span class="hljs-string">\begin&#123;minipage&#125;&#123;7cm&#125;</span><br>        <span class="hljs-string">\centering</span>    %子图居中<br>        <span class="hljs-string">\includegraphics[scale=0.5]&#123;fig/3.png&#125;</span>  <br>        <span class="hljs-string">\end&#123;minipage&#125;</span><br>    &#125;<br>    <span class="hljs-string">\subfigure[</span> ]&#123; %第二张子图<br>        <span class="hljs-string">\begin&#123;minipage&#125;&#123;7cm&#125;</span><br>        <span class="hljs-string">\centering</span>    %子图居中<br>        <span class="hljs-string">\includegraphics[scale=0.2]&#123;fig/4.png&#125;</span><br>        <span class="hljs-string">\end&#123;minipage&#125;</span><br>    &#125;<br>    <span class="hljs-string">\caption&#123;&#125;</span>    %大图名称<br><span class="hljs-string">\end&#123;figure&#125;</span><br><span class="hljs-string">\FloatBarrier</span>  <span class="hljs-comment">#在图片后放置防止浮动</span><br></code></pre></td></tr></table></figure><h3 id="三图">三图</h3><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><span class="hljs-string">\begin&#123;figure&#125;[htbp]</span><br>    <span class="hljs-string">\centering</span>  %居中<br>    <span class="hljs-string">\subfigure[</span> ]&#123;   %第一张子图<br>    <span class="hljs-string">\begin&#123;minipage&#125;&#123;7cm&#125;</span><br>    <span class="hljs-string">\centering</span>    %子图居中<br>    <span class="hljs-string">\includegraphics[scale=0.2]&#123;fig/21.png&#125;</span> <br>    <span class="hljs-string">\end&#123;minipage&#125;</span><br>    &#125;<br>    <span class="hljs-string">\subfigure[</span> ]&#123; %第二张子图<br>    <span class="hljs-string">\begin&#123;minipage&#125;&#123;7cm&#125;</span><br>    <span class="hljs-string">\centering</span>    %子图居中<br>    <span class="hljs-string">\includegraphics[scale=0.2]&#123;fig/22.png&#125;</span><br>    <span class="hljs-string">\end&#123;minipage&#125;</span><br>    &#125;<br>    <span class="hljs-string">\centering</span><br>    <span class="hljs-string">\includegraphics[width=0.5\linewidth]&#123;fig/23.png&#125;</span><br>    <span class="hljs-string">\label&#123;fig:10&#125;</span><br>    <span class="hljs-string">\caption&#123;&#125;</span>    %大图名称<br>    <span class="hljs-string">\end&#123;figure&#125;</span><br></code></pre></td></tr></table></figure><h3 id="四图">四图</h3><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><span class="hljs-string">\begin&#123;figure&#125;[htbp]</span><br>    <span class="hljs-string">\centering</span><br>    <span class="hljs-string">\subfigure[</span> ]&#123;<br>        <span class="hljs-string">\includegraphics[width=2.5in]&#123;fig/6.png&#125;</span><br>    &#125;<br>    <span class="hljs-string">\subfigure[</span> ]&#123;<br><span class="hljs-string">\includegraphics[width=2.5in]&#123;fig/7.png&#125;</span><br>    &#125;<br>    <span class="hljs-string">\quad</span>    %用 <span class="hljs-string">\quad</span> 来换行<br>    <span class="hljs-string">\subfigure[</span> ]&#123;<br>    <span class="hljs-string">\includegraphics[width=2.5in]&#123;fig/8.png&#125;</span><br>    &#125;<br>    <span class="hljs-string">\subfigure[</span> ]&#123;<br><span class="hljs-string">\includegraphics[width=2.5in]&#123;fig/9.png&#125;</span><br>    &#125;<br>    <span class="hljs-string">\caption&#123;MME，SGW，PGW的容量&#125;</span><br>    <span class="hljs-string">\label&#123;fig.1&#125;</span><br><span class="hljs-string">\end&#123;figure&#125;</span><br></code></pre></td></tr></table></figure><h3 id="五图">五图</h3><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><span class="hljs-string">\begin&#123;figure&#125;[htbp]</span><br>    <span class="hljs-string">\centering</span><br>    <span class="hljs-string">\subfigure[</span> ]&#123;<br>        <span class="hljs-string">\includegraphics[width=2.5in]&#123;fig/16.png&#125;</span><br>    &#125;<br>    <span class="hljs-string">\subfigure[</span> ]&#123;<br><span class="hljs-string">\includegraphics[width=2.5in]&#123;fig/17.png&#125;</span><br>    &#125;<br>    <span class="hljs-string">\quad</span>    %用 <span class="hljs-string">\quad</span> 来换行<br>    <span class="hljs-string">\subfigure[</span> ]&#123;<br>    <span class="hljs-string">\includegraphics[width=2.5in]&#123;fig/18.png&#125;</span><br>    &#125;<br>    <span class="hljs-string">\subfigure[</span> ]&#123;<br><span class="hljs-string">\includegraphics[width=2.5in]&#123;fig/19.png&#125;</span><br>    &#125;<br>    <span class="hljs-string">\centering</span><br><span class="hljs-string">\includegraphics[width=0.4\linewidth]&#123;fig/20.png&#125;</span><br><span class="hljs-string">\caption&#123;&#125;</span><br><span class="hljs-string">\end&#123;figure&#125;</span><br><span class="hljs-string">\FloatBarrier</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>LaTeX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2024-W12</title>
    <link href="/2024/03/23/2024-W12/"/>
    <url>/2024/03/23/2024-W12/</url>
    
    <content type="html"><![CDATA[<p>本篇是对 <code>2024-03-18 </code> 到 <code> 2024-03-24</code> 这一周生活的记录与思考。</p><h3 id="博客实践">博客实践</h3><p>搭建了一个静态博客，现在还存在一些问题</p><ul><li>如何用 ob 轻松提交？</li><li>本地预览时不时会失效，不知道是什么原因</li></ul><p>于是尝试另外一个方案</p><ul><li><a href="https://mxts.jiujiuer.xyz/2022/11/25/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/GitHub%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/">根据这个</a>尝试自动化搭建，又有新问题</li><li>工作流运行正常但是页面生成为空，是否和网页配置有关？或者说主题的问题？</li><li><s>找不到办法，问老师，老师把这个抛给研究生了（突然负罪感++）</s>，告诉老师解决了</li></ul><p>确实是主题的原因，最后找到了在 GitHub action 里面写子模块的办法，成功！</p><p>虽然前前后后花了四天左右的事件折腾，但我收获了淡淡的、长久的喜悦。</p><p>同时也无意中验证了费曼的某个技巧在我身上是可行的。</p><blockquote><p>[!cite]<br>只要开始了研究某个谜题，就绝对不可以停下来，必须解开谜题才能停止。</p><p>…必须坚持到底，绝不半途而废，一定找到问题所在，否则绝不罢休！</p></blockquote><h3 id="新收藏的播客">新收藏的播客</h3><ul><li><p>岩中花述<br>喜欢这个名字，很有力量和意义。</p><p>文艺访谈的感觉，我听到的是鲁豫老师对话阿詹，还有一期阿庞的。</p><p>阿詹那期有提到自己偶像的一个转变，从一个虚构的大女主律师到女大法官鲁斯·金斯伯格。</p><p>我以前也以为我不会有偶像，直到发现有这么多女大姥，好喜欢看她们的故事。</p></li><li><p>乌鸦不在场<br>李雯姐推荐的一档讲述真实罪案的节目，第一次接触这个类型，挺有趣的。</p></li><li><p>纵横四海<br>很长的知识输出播客，最长的有四个小时（我听的），断断续续的听了两三期（走路的时候主播的声音也很适配），</p><p>个人感觉信噪比比较低，不太习惯分段听。</p></li></ul><h3 id="阅读-思考">阅读&amp;思考</h3><blockquote><p>读书既可以有功利性也可以没有。</p><p>如果你目的导向明确，就像拿到一个的房子的图纸了，要做的事情就是建房子，那么就可以开始《刻意练习》的操作；</p><p>如果你目标不明确，那更多是以兴趣为导向，就像在一片空地播种, 直到它生长成属于自己的独一无二的知识体系森林。</p></blockquote><ul><li><p>💭<br>大一大二的时候，我很长一段时间都在迷茫，</p><p>迫切地想要找到目标或者兴趣所在，想要选择一个方向可以 all in 深入学习，锻炼技能。然而，什么也没干。</p><p>现在想来，我那个时候虽然有目的，但完全不具体，也很混乱。</p><p>我完全可以把目标改成发现日常里感兴趣的东西然后去学习，比如 ob 的学习，那么自然而然，兴趣方向就多起来了。</p><p>现在有很多兴趣在以前就有迹象，只是我一直没有注意和去实践它们。</p></li></ul><blockquote><p>所有的代码都是技术债。</p><p>代码需要不断维护，如果技术债拖着不换，维护成本就会像滚雪球一样越滚越多，直到被放弃。</p><p>代码越少，技术债越小。</p><p>对软件开发的正确做法：1. 冗余的代码都要删除；2。只实现必须实现的功能，除非绝对必要，不引进新功能。</p></blockquote><ul><li><p>💭<br>很多软件不愿意增加新功能或许是因为维护成本大于收益吧。</p><p>关于工具的使用，最近有些困惑。</p><p>我很容易为了折腾工具而忘记本来的目的。</p><p>比如学习 ob，大概折腾到我觉得看得过去的时候，我就能专注使用，并且心情愉悦效率高。</p><p>搭建博客我也考虑到维护和后面部署提交的麻烦，所以在前面折腾，短时间内 all in ，试图解决问题。</p><p>如果结果顺利的话，那就皆大欢喜，我开开心心地使用。</p><p>如果进展不顺利，该怎么办呢？我想过~~暂时放下看看？~~事实上我放不下，最后 work out，开心！</p></li></ul><blockquote><p>同一组人结合仍然是克服孤独感最常用的方法。</p><p>在这种结合中，参加者为了使自己属于这一组人而失去了大部分个性。</p><p>如果我与他人完全一样，我的感情、思想与他人一致，我的衣着、习惯和看法都与这一组人的楷模看齐，</p><p>我就可得救，就不会再经历可怕的孤独。</p></blockquote><ul><li><p>💭<br>人为什么不愿意和群体不一样的另一个角度，除了害怕承受异议带来的后果，也无法拒绝长期获得认同共识来缓解孤独的甜头。</p><p>说到这又想到总有人跟我抱怨另一个人做了某些ta 不想干的事情，</p><p>但是迫于从众的压力，ta 只好选择和另一个人保持一致。</p><p>我每次都在试图鼓励ta 们去做自己的选择，不过也没多大作用，对自己来说改变就挺难的更何况他人。</p><p>我可以确定的是，我不会压抑心中的怒火，而是要为每一次的愤怒找到归处。</p><p>无论它来自谁或者什么事情，都是在推动我直面问题。这便是在日常生活中实践女权主义，我本位地活。</p></li></ul><blockquote><p>[!cite]<br>上野: …在日常生活中实践女权主义并非一个宏大的政治议题。</p><p>你能做的便是，反击那些令你不舒服的事，还有做你想做的任何事。不要向你所遇到的不公妥协。</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>个人记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>weekly</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Latex的安装和基本使用</title>
    <link href="/2024/03/23/Latex%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
    <url>/2024/03/23/Latex%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<ul><li>来源<ul><li><a href="https://dylandong.top/posts/e480/">LaTeX：从入门到日常使用</a></li></ul></li></ul><h2 id="是什么">是什么</h2><p>LaTeX是一种“非所见即所得”的排版系统，用户需要输入特定的代码，保存在后缀为.tex的文件中，通过编译得到所需的pdf文件，例如以下代码：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">\documentclass</span><span class="hljs-template-variable">&#123;article&#125;</span><span class="language-xml">  </span><br><span class="language-xml">  </span><br><span class="language-xml">\begin</span><span class="hljs-template-variable">&#123;document&#125;</span><span class="language-xml">  </span><br><span class="language-xml">  </span><br><span class="language-xml">Hello, world!  </span><br><span class="language-xml">  </span><br><span class="language-xml">\end</span><span class="hljs-template-variable">&#123;document&#125;</span><br></code></pre></td></tr></table></figure><p>最后输出的结果是一个 pdf 文件，内容是“Hello, world!”。</p><p>所见即所得可以参考 word，但 latex 的优势在于可以保证<strong>规范性</strong>，这使得 LaTeX 非常适合用于论文的排版。</p><h2 id="文档类型">文档类型</h2><p>- 对于英文，可以用<code>book</code>、<code>article</code>和<code>beamer</code>；<br> -  对于中文，可以用 <code>ctexbook</code>、<code>ctexart</code> 和 <code>ctexbeamer</code>，这些类型自带了对中文的支持。</p><h3 id="文首环境">文首环境</h3><p>不同的文件类型，编写的过程中也会有一定的差异，如果直接修改文件类型的话，甚至会报错。以下统一选用 <code>ctexart</code>。在编辑框第一行，输入如下内容来设置文件类型：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">\documentclass</span><span class="hljs-template-variable">&#123;ctexart&#125;</span><br></code></pre></td></tr></table></figure><p>一般也可以在<code>\documentclass</code>处设置基本参数，笔者通常设置默认字体大小为12pt，纸张大小为A4，单面打印。需要将第一行的内容替换为：</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs accesslog">\documentclass<span class="hljs-string">[12pt, a4paper, oneside]</span>&#123;ctexart&#125;<br></code></pre></td></tr></table></figure><p>文件的正文部分需要放入 document 环境中，在 document 环境外的部分不会出现在文件中。</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">\documentclass[12pt, a4paper, oneside]</span><span class="hljs-template-variable">&#123;ctexart&#125;</span><span class="language-xml">  </span><br><span class="language-xml">  </span><br><span class="language-xml">\begin</span><span class="hljs-template-variable">&#123;document&#125;</span><span class="language-xml">  </span><br><span class="language-xml">  </span><br><span class="language-xml">这里是正文.   </span><br><span class="language-xml">  </span><br><span class="language-xml">\end</span><span class="hljs-template-variable">&#123;document&#125;</span><br></code></pre></td></tr></table></figure><h2 id="宏包">宏包</h2><ul><li>用途<br>为了完成一些功能（如定理环境），还需要在导言区，也即document环境之前加载宏包。加载宏包的代码是<code>\usepackage&#123;&#125;</code>。本份教程中，与数学公式与定理环境相关的宏包为<code>amsmath</code>、<code>amsthm</code>、<code>amssymb</code>，用于插入图片的宏包为<code>graphicx</code>，</li><li>代码</li></ul><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">\usepackage</span><span class="hljs-template-variable">&#123;amsmath, amsthm, amssymb, graphicx&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><br></code></pre></td></tr></table></figure><ul><li>另外，在加载宏包时还可以设置基本参数，如使用超链接宏包<code>hyperref</code>，可以设置引用的颜色为黑色等</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">\usepackage[<span class="hljs-attribute">bookmarks</span>=<span class="hljs-literal">true</span>, colorlinks, <span class="hljs-attribute">citecolor</span>=blue, <span class="hljs-attribute">linkcolor</span>=black]&#123;hyperref&#125;<br></code></pre></td></tr></table></figure><h2 id="基本运用">基本运用</h2><h4 id="标题">标题</h4><p>标题可以用 <code>\title&#123;&#125;</code> 设置，作者可以用 <code>\author</code> 设置，日期可以用 <code>\date&#123;&#125;</code> 设置，这些都需要放在导言区。为了在文档中显示标题信息，需要使用 <code>\maketitle</code>。例如：</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><span class="hljs-string">\documentclass[12pt,</span> a4paper, oneside]&#123;ctexart&#125;  <br><span class="hljs-string">\usepackage&#123;amsmath,</span> amsthm, amssymb, graphicx&#125;  <br><span class="hljs-string">\usepackage[bookmarks=true,</span> colorlinks, citecolor=blue, linkcolor=black]&#123;hyperref&#125;  <br>  <br>% 导言区  <br>  <br><span class="hljs-string">\title&#123;我的第一个\LaTeX</span> 文档&#125;  <br><span class="hljs-string">\author&#123;统计91董晟渤&#125;</span>  <br><span class="hljs-string">\date&#123;\today&#125;</span>  <br>  <br><span class="hljs-string">\begin&#123;document&#125;</span>  <br>  <br><span class="hljs-string">\maketitle</span>  <br>  <br>这里是正文.   <br>  <br><span class="hljs-string">\end&#123;document&#125;</span><br></code></pre></td></tr></table></figure><h4 id="正文">正文</h4><p>正文可以直接在 document 环境中书写，没有必要加入空格来缩进，因为文档默认会进行首行缩进。相邻的两行在编译时仍然会视为同一段。在 LaTeX 中，另起一段的方式是使用一行相隔，例如：</p><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs erlang">我是第一段.   <br>  <br>我是第二段.<br></code></pre></td></tr></table></figure><p>这样编译出来就是两个段落。在正文部分，多余的空格、回车等等都会被自动忽略，这保证了全文排版不会突然多出一行或者多出一个空格。另外，另起一页的方式是：</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">\<span class="hljs-keyword">new</span><span class="hljs-type">page</span><br></code></pre></td></tr></table></figure><p>，为了保证美观，通常将中文标点符号替换为英文标点符号（需要注意的是英文标点符号后面还有一个空格），这比较适合数学类型的文档。</p><p>在正文中，还可以设置局部的特殊字体：</p><table><thead><tr><th>字体</th><th>命令</th></tr></thead><tbody><tr><td>直立</td><td>\textup{}</td></tr><tr><td>意大利</td><td>\textit{}</td></tr><tr><td>倾斜</td><td>\textsl{}</td></tr><tr><td>小型大写</td><td>\textsc{}</td></tr><tr><td>加宽加粗</td><td>\textbf{}</td></tr></tbody></table><h4 id="章节">章节</h4><p>对于<code>ctexart</code>文件类型，章节可以用<code>\section&#123;&#125;</code>和<code>\subsection&#123;&#125;</code>命令来标记，例如：</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><span class="hljs-string">\documentclass[12pt,</span> a4paper, oneside]&#123;ctexart&#125;  <br><span class="hljs-string">\usepackage&#123;amsmath,</span> amsthm, amssymb, graphicx&#125;  <br><span class="hljs-string">\usepackage[bookmarks=true,</span> colorlinks, citecolor=blue, linkcolor=black]&#123;hyperref&#125;  <br>  <br>% 导言区  <br>  <br><span class="hljs-string">\title&#123;我的第一个\LaTeX</span> 文档&#125;  <br><span class="hljs-string">\author&#123;统计91董晟渤&#125;</span>  <br><span class="hljs-string">\date&#123;\today&#125;</span>  <br>  <br><span class="hljs-string">\begin&#123;document&#125;</span>  <br>  <br><span class="hljs-string">\maketitle</span>  <br>  <br><span class="hljs-string">\section&#123;一级标题&#125;</span>  <br>  <br><span class="hljs-string">\subsection&#123;二级标题&#125;</span>  <br>  <br>这里是正文.   <br>  <br><span class="hljs-string">\subsection&#123;二级标题&#125;</span>  <br>  <br>这里是正文.   <br>  <br><span class="hljs-string">\end&#123;document&#125;</span><br></code></pre></td></tr></table></figure><h4 id="目录">目录</h4><p>在有了章节的结构之后，使用 <code>\tableofcontents</code> 命令就可以在指定位置生成目录。通常带有目录的文件需要编译两次，因为需要先在目录中生成.toc 文件，再据此生成目录。</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><span class="hljs-string">\documentclass[12pt,</span> a4paper, oneside]&#123;ctexart&#125;  <br><span class="hljs-string">\usepackage&#123;amsmath,</span> amsthm, amssymb, graphicx&#125;  <br><span class="hljs-string">\usepackage[bookmarks=true,</span> colorlinks, citecolor=blue, linkcolor=black]&#123;hyperref&#125;  <br>  <br>% 导言区  <br>  <br><span class="hljs-string">\title&#123;我的第一个\LaTeX</span> 文档&#125;  <br><span class="hljs-string">\author&#123;统计91董晟渤&#125;</span>  <br><span class="hljs-string">\date&#123;\today&#125;</span>  <br>  <br><span class="hljs-string">\begin&#123;document&#125;</span>  <br>  <br><span class="hljs-string">\maketitle</span>  <br>  <br><span class="hljs-string">\tableofcontents</span>  <br>  <br><span class="hljs-string">\section&#123;一级标题&#125;</span>  <br>  <br><span class="hljs-string">\subsection&#123;二级标题&#125;</span>  <br>  <br>这里是正文.   <br>  <br><span class="hljs-string">\subsection&#123;二级标题&#125;</span>  <br>  <br>这里是正文.   <br>  <br><span class="hljs-string">\end&#123;document&#125;</span><br></code></pre></td></tr></table></figure><h4 id="图片">图片</h4><p>插入图片需要使用<code>graphicx</code>宏包，建议使用如下方式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css">\begin&#123;<span class="hljs-selector-tag">figure</span>&#125;<span class="hljs-selector-attr">[htbp]</span>  <br>\centering  <br>\includegraphics<span class="hljs-selector-attr">[width=8cm]</span>&#123;图片<span class="hljs-selector-class">.jpg</span>&#125;  <br>\<span class="hljs-selector-tag">caption</span>&#123;图片标题&#125;  <br>\end&#123;<span class="hljs-selector-tag">figure</span>&#125;<br></code></pre></td></tr></table></figure><p>其中，<code>[htbp]</code> 的作用是自动选择插入图片的最优位置，<code>\centering</code> 设置让图片居中，<code>[width=8cm]</code> 设置了图片的宽度为8cm，<code>\caption&#123;&#125;</code> 用于设置图片的标题。</p><h4 id="表格">表格</h4><p>LaTeX 中表格的插入较为麻烦，可以直接使用 <a href="https://www.tablesgenerator.com/#">Create LaTeX tables online – TablesGenerator.com</a> 来生成。建议使用如下方式：</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs tap">\begin&#123;table&#125;[htbp]  <br>\centering  <br>\caption&#123;表格标题&#125;  <br>\begin&#123;tabular&#125;&#123;ccc&#125;  <br>       <span class="hljs-number"> 1 </span>&amp;<span class="hljs-number"> 2 </span>&amp;<span class="hljs-number"> 3 </span>\\  <br>       <span class="hljs-number"> 4 </span>&amp;<span class="hljs-number"> 5 </span>&amp;<span class="hljs-number"> 6 </span>\\  <br>       <span class="hljs-number"> 7 </span>&amp;<span class="hljs-number"> 8 </span>&amp;<span class="hljs-number"> 9 </span> <br>\end&#123;tabular&#125;  <br>\end&#123;table&#125;<br></code></pre></td></tr></table></figure><h4 id="列表">列表</h4><p>LaTeX中的列表环境包含无序列表<code>itemize</code>、有序列表<code>enumerate</code>和描述<code>description</code>，以<code>enumerate</code>为例，用法如下：<br>`</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><span class="hljs-string">\begin&#123;enumerate&#125;</span>  <br>    <span class="hljs-string">\item</span> 这是第一点;   <br>    <span class="hljs-string">\item</span> 这是第二点;  <br>    <span class="hljs-string">\item</span> 这是第三点.   <br><span class="hljs-string">\end&#123;enumerate&#125;</span><br></code></pre></td></tr></table></figure><p>另外，也可以自定义<code>\item</code>的样式：</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><span class="hljs-string">\begin&#123;enumerate&#125;</span>  <br>    <span class="hljs-string">\item[(1)]</span> 这是第一点;   <br>    <span class="hljs-string">\item[(2)]</span> 这是第二点;  <br>    <span class="hljs-string">\item[(3)]</span> 这是第三点.   <br><span class="hljs-string">\end&#123;enumerate&#125;</span><br></code></pre></td></tr></table></figure><h4 id="定理环境">定理环境</h4><p>定理环境需要使用<code>amsthm</code>宏包，首先在导言区加入：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">\newtheorem</span><span class="hljs-template-variable">&#123;theorem&#125;</span><span class="hljs-template-variable">&#123;定理&#125;</span><span class="language-xml">[section]</span><br></code></pre></td></tr></table></figure><p>其中 <code>&#123;theorem&#125;</code> 是环境的名称，<code>&#123;定理&#125;</code> 设置了该环境显示的名称是“定理”，<code>[section]</code> 的作用是让 <code>theorem</code> 环境在每个 section 中单独编号。在正文中，用如下方式来加入一条定理：</p><figure class="highlight mizar"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mizar">\<span class="hljs-keyword">begin</span>&#123;<span class="hljs-keyword">theorem</span>&#125;[定理名称]  <br>这里是定理的内容.   <br>\<span class="hljs-keyword">end</span>&#123;<span class="hljs-keyword">theorem</span>&#125;<br></code></pre></td></tr></table></figure><p>其中 <code>[定理名称]</code> 不是必须的。另外，我们还可以建立新的环境，如果要让新的环境和 <code>theorem</code> 环境一起计数的话，可以用如下方式：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">\newtheorem</span><span class="hljs-template-variable">&#123;theorem&#125;</span><span class="hljs-template-variable">&#123;定理&#125;</span><span class="language-xml">[section]  </span><br><span class="language-xml">\newtheorem</span><span class="hljs-template-variable">&#123;definition&#125;</span><span class="language-xml">[theorem]</span><span class="hljs-template-variable">&#123;定义&#125;</span><span class="language-xml">  </span><br><span class="language-xml">\newtheorem</span><span class="hljs-template-variable">&#123;lemma&#125;</span><span class="language-xml">[theorem]</span><span class="hljs-template-variable">&#123;引理&#125;</span><span class="language-xml">  </span><br><span class="language-xml">\newtheorem</span><span class="hljs-template-variable">&#123;corollary&#125;</span><span class="language-xml">[theorem]</span><span class="hljs-template-variable">&#123;推论&#125;</span><span class="language-xml">  </span><br><span class="language-xml">\newtheorem</span><span class="hljs-template-variable">&#123;example&#125;</span><span class="language-xml">[theorem]</span><span class="hljs-template-variable">&#123;例&#125;</span><span class="language-xml">  </span><br><span class="language-xml">\newtheorem</span><span class="hljs-template-variable">&#123;proposition&#125;</span><span class="language-xml">[theorem]</span><span class="hljs-template-variable">&#123;命题&#125;</span><br></code></pre></td></tr></table></figure><h4 id="页面">页面</h4><p>最开始选择文件类型时，我们设置的页面大小是a4paper，除此之外，我们也可以修改页面大小为b5paper等等。</p><p>一般情况下，LaTeX 默认的页边距很大，为了让每一页显示的内容更多一些，我们可以使用 <code>geometry</code> 宏包，并在导言区加入以下代码：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">\usepackage&#123;geometry&#125;  <br>\geometry&#123;<span class="hljs-attribute">left</span>=2.54cm, <span class="hljs-attribute">right</span>=2.54cm, <span class="hljs-attribute">top</span>=3.18cm, <span class="hljs-attribute">bottom</span>=3.18cm&#125;<br></code></pre></td></tr></table></figure><p>另外，为了设置行间距，可以使用如下代码：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">\linespread</span><span class="hljs-template-variable">&#123;1.5&#125;</span><br></code></pre></td></tr></table></figure><h4 id="页码">页码</h4><p>默认的页码编码方式是阿拉伯数字，用户也可以自己设置为小写罗马数字：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">\pagenumbering</span><span class="hljs-template-variable">&#123;roman&#125;</span><br></code></pre></td></tr></table></figure><p>另外，<code>aiph</code> 表示小写字母，<code>Aiph</code> 表示大写字母，<code>Roman</code> 表示大写罗马数字，<code>arabic</code> 表示默认的阿拉伯数字。如果要设置页码的话，可以用如下代码来设置页码从0开始：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">\setcounter</span><span class="hljs-template-variable">&#123;page&#125;</span><span class="hljs-template-variable">&#123;0&#125;</span><br></code></pre></td></tr></table></figure><h2 id="数学公式的输入方式">数学公式的输入方式</h2><h3 id="行内公式">行内公式</h3><p>行内公式通常使用<code>$..$</code>来输入，这通常被称为公式环境，例如：</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crystal">若<span class="hljs-variable">$a</span>&gt;<span class="hljs-number">0</span><span class="hljs-variable">$,</span> <span class="hljs-variable">$b</span>&gt;<span class="hljs-number">0</span><span class="hljs-variable">$,</span> 则<span class="hljs-variable">$a</span>+b&gt;<span class="hljs-number">0</span><span class="hljs-variable">$.</span><br></code></pre></td></tr></table></figure><p>公式环境通常使用特殊的字体，并且默认为斜体。需要注意的是，只要是公式，就需要放入公式环境中。如果需要在行内公式中展现出行间公式的效果，可以在前面加入 <code>\displaystyle</code>，例如</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">设$\displaystyle\lim_&#123;n\<span class="hljs-keyword">to</span>\infty&#125;<span class="hljs-attribute">x_n</span>=x$.<br></code></pre></td></tr></table></figure><h3 id="行间公式">行间公式</h3><p>行间公式需要用 <code>$$..$$</code> 来输入，输入方式如下：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gams">若<span class="hljs-symbol">$</span>a&gt;<span class="hljs-number">0</span><span class="hljs-symbol">$</span>, <span class="hljs-symbol">$</span>b&gt;<span class="hljs-number">0</span><span class="hljs-symbol">$</span>, 则  <br><span class="hljs-symbol">$</span><span class="hljs-symbol">$</span>  <br>a+b&gt;<span class="hljs-number">0.</span>  <br><span class="hljs-symbol">$</span><span class="hljs-symbol">$</span><br></code></pre></td></tr></table></figure><h3 id="多行公式">多行公式</h3><p>多行公式通常使用 <code>aligned</code> 环境，例如</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs crystal"><span class="hljs-variable">$$</span>  <br>\<span class="hljs-keyword">begin</span>&#123;aligned&#125;  <br>a &amp; =b+c \\  <br>&amp; =d+e  <br>\<span class="hljs-keyword">end</span>&#123;aligned&#125;  <br><span class="hljs-variable">$$</span><br></code></pre></td></tr></table></figure><h3 id="分式">分式</h3><p>分式可以用 <code>\dfrac&#123;&#125;&#123;&#125;</code> 来输入，例如 <code>\dfrac&#123;a&#125;&#123;b&#125;</code>，效果为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>a</mi><mi>b</mi></mfrac></mrow><annotation encoding="application/x-tex">\frac{a}{b}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0404em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6954em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>。为了在行间、分子、分母或者指数上输入较小的分式，可以改用 <code>\frac&#123;&#125;&#123;&#125;</code>，例如 <code>a^\frac&#123;1&#125;&#123;n&#125;</code>，效果为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mi>n</mi></mrow></msup></mrow><annotation encoding="application/x-tex">a^{1/n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.888em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1/</span><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span></span>。</p><h3 id="括号">括号</h3><p>括号可以直接用 <code>(..)</code> 输入，但是需要注意的是，有时候括号内的内容高度较大，需要改用 <code>\left(..\right)</code>。例如 <code>\left(1+\dfrac&#123;1&#125;&#123;n&#125;\right)^n</code>，效果是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mrow><mo fence="true">(</mo><mn>1</mn><mo>+</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><mo fence="true">)</mo></mrow><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">\left( 1+\frac{1}{n} \right)^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2543em;vertical-align:-0.35em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9043em;"><span style="top:-3.3029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span>。</p><p>在中间需要隔开时，可以用<code>\left(..\middle|..\right)</code>。</p><p>另外，输入大括号{}时需要用 <code>\&#123;..\&#125;</code>，其中 <code>\</code> 起到了转义作用。</p><h3 id="加粗">加粗</h3><p>对于加粗的公式，建议使用 <code>bm</code> 宏包，并且用命令 <code>\bm&#123;&#125;</code> 来加粗，这可以保留公式的斜体。</p><h3 id="大括号">大括号</h3><p>在这里可以使用 <code>cases</code> 环境，可以用于分段函数或者方程组，例如</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs llvm">$$  <br>f(<span class="hljs-keyword">x</span>)<span class="hljs-operator">=</span>\<span class="hljs-keyword">begin</span>&#123;cases&#125;  <br><span class="hljs-keyword">x</span><span class="hljs-punctuation">,</span> &amp; <span class="hljs-keyword">x</span>&gt;<span class="hljs-number">0</span><span class="hljs-punctuation">,</span> \\  <br>-<span class="hljs-keyword">x</span><span class="hljs-punctuation">,</span> &amp; <span class="hljs-keyword">x</span>\leq <span class="hljs-number">0</span>.  <br>\<span class="hljs-keyword">end</span>&#123;cases&#125;  <br>$$<br></code></pre></td></tr></table></figure><h3 id="矩阵和行列式">矩阵和行列式</h3><p>矩阵可以用 <code>bmatrix</code> 环境和 <code>pmatrix</code> 环境，分别为方括号和圆括号，例如</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs crystal"><span class="hljs-variable">$$</span>  <br>\<span class="hljs-keyword">begin</span>&#123;bmatrix&#125;  <br>a &amp; b \\  <br>c &amp; d  <br>\<span class="hljs-keyword">end</span>&#123;bmatrix&#125;  <br><span class="hljs-variable">$$</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>LaTeX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>静态博客搭建指南2.0</title>
    <link href="/2024/03/22/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%972.0/"/>
    <url>/2024/03/22/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%972.0/</url>
    
    <content type="html"><![CDATA[<h2 id="参考">参考</h2><ul><li><a href="https://hexo.io/zh-cn/docs/github-pages">在 GitHub Pages 上部署 Hexo | Hexo</a></li><li><a href="https://oreo.life/blog/2021-09-01-deploy-hexo-with-github-actions-1/">轮子再造 | 使用 GitHub Actions 自动部署 Hexo 博客 - 上篇 | On my way to Oodi (oreo.life)</a></li><li><a href="https://mxts.jiujiuer.xyz/2022/11/25/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/GitHub%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/">GitHub博客搭建 - 神社的储物间 (jiujiuer.xyz)</a></li></ul><p>结合了第二、三个博文中的 workflow 文件，最终实现自动化部署。</p><h2 id="基本操作">基本操作</h2><ul><li>切换分支</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">git checkout <span class="hljs-selector-tag">main</span><br></code></pre></td></tr></table></figure><ul><li>从远程仓库拉取最新的更改并合并到本地仓库</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">git pull origin <span class="hljs-selector-tag">main</span><br></code></pre></td></tr></table></figure><ul><li>保存更改并推送到 GitHub：</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">git <span class="hljs-built_in">add</span> .  <br></code></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">git</span> commit -m <span class="hljs-string">&quot;main workflow configure&quot;</span>  <br></code></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">git</span> commit -m <span class="hljs-string">&quot;Vault backup&quot;</span><br></code></pre></td></tr></table></figure><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima">git <span class="hljs-built_in">push</span> -u <span class="hljs-built_in">origin</span> main<br></code></pre></td></tr></table></figure><ul><li>暂存更改（将它们暂存起来，然后在合并分支后再恢复）</li></ul><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">git stash</span><br></code></pre></td></tr></table></figure><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coq">git stash <span class="hljs-built_in">apply</span><br></code></pre></td></tr></table></figure><ul><li>删除这些更改</li></ul><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">git stash drop</span><br></code></pre></td></tr></table></figure><ul><li>删除远程分支</li></ul><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima">git <span class="hljs-built_in">push</span> <span class="hljs-built_in">origin</span> --<span class="hljs-built_in">delete</span><br></code></pre></td></tr></table></figure><ul><li>关联分支</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git branch -u origin/main<br></code></pre></td></tr></table></figure><ul><li>文件和文件夹的删除</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml">git rm <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml">git rm -r <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="主题">主题</h2><ul><li>文章配置 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter | Hexo</a></li><li>主题配置 <a href="https://hexo.fluid-dev.com/docs/guide/#%E6%9C%AC%E5%9C%B0%E6%90%9C%E7%B4%A2">配置指南 | Hexo Fluid 用户手册 (fluid-dev.com)</a></li></ul><h2 id="解决方案">解决方案</h2><h4 id="You-have-unmerged-paths">You have unmerged paths.</h4><ul><li>查看下暂存区修改后的文件状态。</li></ul><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">git status</span><br></code></pre></td></tr></table></figure><ul><li>来到标红的文件进行修改，再次 push <code>**MERGING**</code> 就没有了</li></ul><h4 id="git-push-u-origin-fatal-unable-to-access">git push -u origin --&gt; fatal: unable to access</h4><ul><li>远程仓库和本地不一致，且远程有的文件本地没有</li><li>查询并取消代理</li></ul><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs tcl">git config --<span class="hljs-keyword">global</span> <span class="hljs-keyword">http</span>.proxy<br> <br>git config --<span class="hljs-keyword">global</span> --<span class="hljs-keyword">unset</span> <span class="hljs-keyword">http</span>.proxy<br></code></pre></td></tr></table></figure><ul><li>修改dns</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml">git pull origin <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>静态博客搭建指南1.0</title>
    <link href="/2024/03/17/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%971.0/"/>
    <url>/2024/03/17/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%971.0/</url>
    
    <content type="html"><![CDATA[<h3 id="方案选择">方案选择</h3><ul><li><p>Netlify <br>一个静态网页生成器，可以快速地构建和发布个人或团队的网站</p></li><li><p>hexo<br>Hexo 是一个快速、简洁且高效的静态博客框架，它基于 Node.js 运行，可以将我们撰写的 Markdown 文档解析渲染成静态的 HTML 网页</p></li><li><p><strong>GitHub Pages</strong><br>GitHub Pages 是由 GitHub 官方提供的一种免费的静态站点托管服务，让我们可以在 GitHub 仓库里托管和发布自己的静态网站页面</p></li><li><p><strong>Hexo + GitHub 文章发布原理</strong><br>在本地撰写 Markdown 格式文章后，通过 Hexo 解析文档，渲染生成具有主题样式的 HTML 静态网页，再推送到 GitHub 上完成博文的发布。</p></li><li><p>Ruby<br>一种面向对象、指令式、函数式、动态的通用编程语言</p></li><li><p>Gem<br><em>Gem</em> 是 <em>Ruby</em> 中的包，其中包含包信息，以及用于安装的文件</p></li><li><p>Gemfile<br>一种描述 Ruby 程序的 gem 依赖关系的格式</p></li><li><p>最后采用了 hexo+github pages 的方案</p></li></ul><h3 id="第一次尝试">第一次尝试</h3><blockquote><p>[!note]  熟悉了基本流程，但是觉得生成部署有点麻烦，后面发现有 github action 可以自动部署(2.0)，折腾了两天，暂时没问题</p></blockquote><h4 id="参考教程">参考教程</h4><ul><li><a href="https://techniquenotes.github.io/2024/02/20/Hexo/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B%EF%BC%88%E4%B8%80%EF%BC%89/">Hexo 博客搭建教程</a></li><li><a href="https://techniquenotes.github.io/2024/02/20/Hexo/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B%EF%BC%88%E4%BA%8C%EF%BC%89/"> Hexo 博客搭建教程（二）</a></li></ul><h4 id="本地配置">本地配置</h4><ul><li><p>安装hexo</p><ul><li>创建一个文件夹 MyBlog，用来存放自己的博客文件，然后 cd 到这个文件夹下（或者在这个文件夹下直接右键 git bash 打开）。</li><li>定位到该目录下，输入 <code>npm install -g hexo-cli </code>安装 Hexo。可能会有几个报错，无视它就行。</li><li>安装完 <code>hexo -v</code> 验证安装成功没</li></ul></li><li><p>初始化</p><ul><li>在主题根目录 <code>hexo init</code><ul><li>初始化失败注意根目录的位置（在三层？）</li></ul></li><li>安装必备组件 <code>npm install</code><br>这时指定目录会有几个文件夹</li></ul></li><li><p>预览</p></li></ul><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs verilog">hexo g (hexo <span class="hljs-keyword">generate</span>)<br>hexo server(或者简写:hexo s）)<br></code></pre></td></tr></table></figure><h4 id="连接-github-到本地">连接 github 到本地</h4><ul><li>在 MyBlog 中右键打开 git bash，第一次使用 git 后需要将用户名和邮箱进行初始化</li></ul><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.name</span> <span class="hljs-string">&quot;yohakuo&quot;</span><br>git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.email</span> <span class="hljs-string">&quot;2394791478@qq.com&quot;</span><br></code></pre></td></tr></table></figure><ul><li>检查</li></ul><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">git config <span class="hljs-keyword">user</span>.name<br>git config <span class="hljs-keyword">user</span>.email<br></code></pre></td></tr></table></figure><ul><li>ssh<br>ssh，简单来讲，就是一个秘钥，其中，id_rsa 是你这台电脑的私人秘钥，不能给别人看的，id_rsa. pub 是公共秘钥，可以随便给别人看。把这个公钥放在 GitHub 上，这样当你链接 GitHub 自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过 git 上传你的文件到 GitHub 上。</li><li>创建 SSH</li></ul><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs excel">ssh-keygen -<span class="hljs-built_in">t</span> rsa -C <span class="hljs-string">&quot;2394791478@qq.com&quot;</span><br></code></pre></td></tr></table></figure><ul><li>检验是否创建成功</li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ssh</span> -T git<span class="hljs-variable">@github</span>.com<br></code></pre></td></tr></table></figure><h4 id="将-hexo-部署到-github">将 hexo 部署到 github</h4><p>这一步，我们就可以将 hexo 和 GitHub 关联起来，也就是将 hexo 生成的文章部署到 GitHub 上，打开博客根目录下的_config. yml 文件，这是博客的配置文件，在这里你可以修改与博客配置相关的各种信息。修改最后一行的配置：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"># Deployment <br>## Docs: https:<span class="hljs-comment">//hexo.io/docs/one-command-deployment </span><br>deploy:<br>  type: <span class="hljs-string">&#x27;git&#x27;</span><br>  repository: https:<span class="hljs-comment">//github.com/yohakuo/yohakuo.github.io.git</span><br>  branch: main<br></code></pre></td></tr></table></figure><ul><li><p>注意空格</p></li><li><p>repository 修改为你自己的 github 项目地址即可就是部署时，告诉工具，将生成网页通过 git 方式上传到你对应的链接仓库中。</p></li><li><p>先安装部署的命令</p></li></ul><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install hexo-deployer-git <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><ul><li>部署</li></ul><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs verilog">hexo clean <span class="hljs-comment">//缩写成 hexo cl</span><br>hexo <span class="hljs-keyword">generate</span> <span class="hljs-comment">// 缩写 hexo g</span><br>hexo deploy <span class="hljs-comment">// hexo deploy</span><br></code></pre></td></tr></table></figure><h4 id="写文章、发布">写文章、发布</h4><ul><li>先安装拓展</li></ul><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> i hexo-deployer-git<br></code></pre></td></tr></table></figure><ul><li>新建博客</li></ul><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type">post</span> <span class="hljs-string">&quot;name&quot;</span><br></code></pre></td></tr></table></figure><ul><li><p>然后在 <code>source\ _posts </code> 目录可以看到. md 文件</p></li><li><p>实时预览和发布<br>编写完 markdown 文件后，在根目录用 <code>hexo g</code> 生成静态网页，<code>hexo s</code> 本地预览<br>如果没有问题可以 <code>hexo d</code> 上次到github</p></li></ul><h4 id="本地预览">本地预览</h4><ul><li>本地预览      <a href="http://localhost:4000/404.html">http://localhost:4000/404.html</a></li></ul><h3 id="解决方案">解决方案</h3><h4 id="git-clone-失败">git clone 失败</h4><ul><li>取消 http 代理</li></ul><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs tcl">git config --<span class="hljs-keyword">global</span> --<span class="hljs-keyword">unset</span> <span class="hljs-keyword">http</span>. proxy<br></code></pre></td></tr></table></figure><ul><li>取消 https 代理</li></ul><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-comment">git config</span> <span class="hljs-literal">--</span><span class="hljs-comment">global</span> <span class="hljs-literal">--</span><span class="hljs-comment">unset https</span><span class="hljs-string">.</span> <span class="hljs-comment">proxy</span><br></code></pre></td></tr></table></figure><h4 id="error-key-does-not-contain-variable-name-user">error: key does not contain variable name: user.</h4><ul><li>转为手动输入</li></ul><h4 id="css-渲染失败">css 渲染失败</h4><ul><li>文件名内有非法字符 # ，换目录，目录最好是 <code>x:/xx/xx</code><ul><li>新建目录 <code>x:/x</code> 也遇到了问题</li></ul></li><li><a href="https://github.com/MOxFIVE/hexo-theme-yelee/issues/245">ERROR Asset render failed: css/style.css · Issue</a></li></ul><h4 id="打开网页是空白，警告：No-layout">打开网页是空白，警告：No layout</h4><ul><li>可能是主题配置的问题</li><li>存在两个主题的<code>.yml</code> 文件</li></ul><h4 id="hexo-s-访问失败，-hexo-d-报错">hexo s 访问失败， hexo d 报错</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vim">localhost 已拒绝连接<br><br>fatal: <br>unable <span class="hljs-keyword">to</span> access  https://github.<span class="hljs-keyword">com</span>/yohakuo/yohakuo.github.io.git/<br>Could not <span class="hljs-built_in">resolve</span> host: github. <span class="hljs-keyword">com</span><br></code></pre></td></tr></table></figure><ul><li>更改 DNS 为 google 后还是无法本地预览，但发布成功了</li></ul>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
